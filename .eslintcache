[{"D:\\Workspace\\demo01\\src\\pages\\component\\addCourse\\index.jsx":"1","D:\\Workspace\\demo01\\src\\pages\\login\\index.jsx":"2","D:\\Workspace\\demo01\\src\\pages\\test\\index.jsx":"3","D:\\Workspace\\demo01\\src\\pages\\component\\video\\index.jsx":"4","D:\\Workspace\\demo01\\src\\pages\\component\\infCourse\\index.jsx":"5","D:\\Workspace\\demo01\\src\\pages\\home\\index.js":"6","D:\\Workspace\\demo01\\src\\pages\\findpass\\index.js":"7","D:\\Workspace\\demo01\\src\\App.js":"8","D:\\Workspace\\demo01\\src\\index.js":"9","D:\\Workspace\\demo01\\src\\pages\\home\\component\\navigate\\index.jsx":"10","D:\\Workspace\\demo01\\src\\pages\\register\\index.jsx":"11","D:\\Workspace\\demo01\\src\\pages\\register\\component\\register\\index.jsx":"12","D:\\Workspace\\demo01\\src\\pages\\login\\component\\login\\index.jsx":"13","D:\\Workspace\\demo01\\src\\pages\\component\\device\\index.jsx":"14","D:\\Workspace\\demo01\\src\\pages\\component\\head\\index.jsx":"15","D:\\Workspace\\demo01\\src\\pages\\component\\classroom3d\\index.jsx":"16","D:\\Workspace\\demo01\\src\\pages\\component\\concer3d\\index.jsx":"17","D:\\Workspace\\demo01\\src\\pages\\component\\device\\leftdev\\index.jsx":"18","D:\\Workspace\\demo01\\src\\pages\\component\\device\\rightdev\\index.jsx":"19","D:\\Workspace\\demo01\\src\\pages\\component\\personinfo\\index.jsx":"20","D:\\Workspace\\demo01\\src\\pages\\component\\datasta\\index.jsx":"21","D:\\Workspace\\demo01\\src\\pages\\component\\datasta\\concern\\index.jsx":"22","D:\\Workspace\\demo01\\src\\pages\\component\\datasta\\muse\\index.jsx":"23","D:\\Workspace\\demo01\\src\\pages\\component\\datasta\\wifi\\index.jsx":"24"},{"size":10478,"mtime":1625059937516,"results":"25","hashOfConfig":"26"},{"size":589,"mtime":1616894932252,"results":"27","hashOfConfig":"26"},{"size":4133,"mtime":1625108414675,"results":"28","hashOfConfig":"26"},{"size":2829,"mtime":1625137656537,"results":"29","hashOfConfig":"26"},{"size":15484,"mtime":1625131316502,"results":"30","hashOfConfig":"26"},{"size":415,"mtime":1622689409094,"results":"31","hashOfConfig":"26"},{"size":3147,"mtime":1615107043828,"results":"32","hashOfConfig":"26"},{"size":887,"mtime":1619405257199,"results":"33","hashOfConfig":"26"},{"size":243,"mtime":1617093160949,"results":"34","hashOfConfig":"26"},{"size":10063,"mtime":1625142604568,"results":"35","hashOfConfig":"26"},{"size":645,"mtime":1616897445079,"results":"36","hashOfConfig":"26"},{"size":5729,"mtime":1623482982720,"results":"37","hashOfConfig":"26"},{"size":3733,"mtime":1623483147897,"results":"38","hashOfConfig":"26"},{"size":1184,"mtime":1619494454076,"results":"39","hashOfConfig":"26"},{"size":9016,"mtime":1625137879033,"results":"40","hashOfConfig":"26"},{"size":13904,"mtime":1620381643970,"results":"41","hashOfConfig":"26"},{"size":14716,"mtime":1621321904769,"results":"42","hashOfConfig":"26"},{"size":3391,"mtime":1619513766734,"results":"43","hashOfConfig":"26"},{"size":2569,"mtime":1621493508213,"results":"44","hashOfConfig":"26"},{"size":551,"mtime":1620378589838,"results":"45","hashOfConfig":"26"},{"size":897,"mtime":1625122723007,"results":"46","hashOfConfig":"26"},{"size":3841,"mtime":1625136693562,"results":"47","hashOfConfig":"26"},{"size":134,"mtime":1625122710492,"results":"48","hashOfConfig":"26"},{"size":133,"mtime":1625122729007,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"xkt7yg",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"D:\\Workspace\\demo01\\src\\pages\\component\\addCourse\\index.jsx",["109","110","111","112","113"],"import React, { useEffect } from 'react';\r\nimport { Breadcrumb, Form, Input, Button, Upload, message,Result} from 'antd';\r\nimport {\r\n    HighlightOutlined,\r\n    InfoCircleOutlined,\r\n    UploadOutlined,\r\n    InboxOutlined,\r\n\r\n} from '@ant-design/icons';\r\nimport \"./addcourse.css\"\r\nimport cookie from 'react-cookies'\r\nimport axios from 'axios';\r\n//import Forbid from \"../../forbid\"\r\n\r\n\r\n\r\nexport default function AddCourse() {\r\n\r\n    useEffect(()=>{\r\n        let role=cookie.load(\"role\")\r\n        //console.log(\"判断角色：\"+role)\r\n        if(role!==\"true\"){\r\n            document.getElementsByClassName(\"add\")[0].style.display=\"none\"\r\n            document.getElementsByClassName(\"noaccess\")[0].style.display=\"display\"\r\n        }else{\r\n            document.getElementsByClassName(\"add\")[0].style.display=\"display\"\r\n            document.getElementsByClassName(\"noaccess\")[0].style.display=\"none\"\r\n        }\r\n    })\r\n\r\n    var myDate = new Date();\r\n    var datetime = myDate.getFullYear()+\"-\"+myDate.getMonth()+\"-\"+myDate.getDay() + \" \" + myDate.getHours() + \":\" + myDate.getMinutes() + \":\" + myDate.getSeconds();\r\n    console.log(datetime)\r\n\r\n    const layout = {\r\n        labelCol: { span: 7 },      //整个添加框向右偏移的span\r\n        wrapperCol: { span: 10 },   //添加框所占的span\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 10, span: 2 },    //按钮向右偏移的span，所占的span\r\n    };\r\n    const onFinish = (values) => {\r\n        console.log('课程参数:', values);  \r\n        console.log(values.fengmian[0].toString())\r\n       axios({\r\n           method:\"POST\",\r\n           url:\"http://120.27.236.223:9000/course/save\",\r\n           data:{\r\n               //\"courseId\":\"\",\r\n               \"courseName\":values.coursename,\r\n               \"courseType\":1,\r\n               \"courseTeacher\":values.uploadname,\r\n               \"courseIntroduction\":values.describle,\r\n               \"courseReleaseTime\":values.uploadtime,\r\n               \"courseAvatarId\":values.fengmian[0],\r\n               \"courseLikedTimes\":0,\r\n               \"courseFileId\":values.coursefile\r\n           }\r\n       }).then(res=>{\r\n           console.log(res.data)\r\n           if(res.data.success===true){\r\n                message.success(\"课程上传成功啦！可以在课程列表里查看\")\r\n           }else{\r\n                message.error(\"课程上传失败！\")\r\n           }\r\n       })\r\n       \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    //上传课程视频文件用到的\r\n    const { Dragger } = Upload;\r\n    var coursefilelist = []\r\n    const props = {\r\n        name: 'files',\r\n        multiple: true,     //支持一次性上传多个文件\r\n        action: 'http://120.27.236.223:9000/course/uploadFile',\r\n        onChange(info) {\r\n            const { status } = info.file;\r\n            // const {resp}=info.file.response\r\n\r\n            if (status !== 'uploading') {\r\n                console.log(\"uploading:\", info.file, info.fileList);\r\n            }\r\n            if (status === 'done') {\r\n                message.success(\"done:\" + '${info.file.name} 课程文件上传成功...');\r\n                console.log(\"课程文件返回结果：\" + info.file.response);\r\n                coursefilelist.push(info.file.response.result[0])\r\n                console.log(\"courselist::\", coursefilelist)\r\n                console.log(typeof (coursefilelist))\r\n            } else if (status === 'error') {\r\n                message.error(\"error\" + `${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    };\r\n\r\n    //上传封面图片\r\n    var fengmianimg=[];\r\n    function uploadfengmian(info) {\r\n        const { status } = info.file;\r\n        fengmianimg.splice(0,fengmianimg.length)    //清空数组元素,使用 fengmianimg=[] 清空数组时不行\r\n        if (status === 'done') {\r\n            message.success(\"done: \" + `${info.file.name} 封面文件上传成功...`);\r\n            //console.log(\"封面文件respone：\"+info.file.response.result[0]);\r\n            \r\n            fengmianimg.push(info.file.response.result[0])\r\n            console.log(\"fengmianimg::\", fengmianimg)\r\n        } else if (status === 'error') {\r\n            message.error(\"error\" + `${info.file.name} file upload failed.`);\r\n        }\r\n    }\r\n\r\n    //验证头像文件大小（<2MB）和格式(jpg,png)\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n        return isJpgOrPng && isLt2M;\r\n    }\r\n\r\n    // function Backhome(){\r\n    //     let history = useHistory();\r\n    //     history.push('/');\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            {/* 头部面包屑 */}\r\n            <Breadcrumb style={{ margin: '16px 0', fontSize: \"20px\" }}>\r\n                <Breadcrumb.Item>\r\n                    <HighlightOutlined />\r\n                    <span>\r\n                        课程管理\r\n                    </span>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <InfoCircleOutlined />\r\n                    <span>添加课程</span>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n        {/* 当进入角色为【学生】时classname===noaccess界面展示，添加课程classname===add界面隐藏；同理可得 */}\r\n        <div className=\"noaccess\">\r\n            <Result\r\n                status=\"warning\"\r\n                title=\"抱歉，添加课程页面只允许老师访问哦\"\r\n            />   \r\n        </div>\r\n        \r\n        <div className=\"add\">\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        // initialValues={\r\n                        //                {\"coursefile\":{coursefilelist}},\r\n                        //                {\"fengmian\":{fengmianimg}}\r\n                                      \r\n                        //                 }\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"课程名称\"\r\n                            name=\"coursename\"\r\n                            rules={[{ required: true, message: '课程名称为不能为空' }]}\r\n                        //initialValue=\"kechengming\"\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"发布人\"\r\n                            name=\"uploadname\"\r\n                            rules={[{ required: true, message: '发布人不能为空' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"发布时间\"\r\n                            name=\"uploadtime\"\r\n                            initialValue={datetime}\r\n                        >\r\n                            {/* <DatePicker showTime onChange={onChange} onOk={onOk} /> */}\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"课程描述\"\r\n                            name=\"describle\"\r\n                            rules={[{ required: true, message: '课程描述不能为空' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        {/* 上传课程封面 */}\r\n                        <Form.Item\r\n                            label=\"上传课程封面\"\r\n                        // name=\"fengmian\"\r\n                        // initialValue={fengmianimg}\r\n                        >\r\n                            <Upload\r\n                                //action=\"http://www.aifixerpic.icu/upload/upload_img\"\r\n                                action=\"http://120.27.236.223:9000/course/uploadCoursePic\"\r\n                                name=\"files\"\r\n                                listType=\"picture\"\r\n                                maxCount={1}\r\n                                beforeUpload={beforeUpload}\r\n                                onChange={uploadfengmian}\r\n                            >\r\n                                {/* <Upload\r\n                        {...propsfengmian}\r\n                    > */}\r\n                                <Button icon={<UploadOutlined />}>上传 (最多1张)</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        {/* 上传课程视频文件 */}\r\n                        <Form.Item\r\n                            label=\"上传课程资料\"\r\n                        >\r\n                            <Dragger {...props}>\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p className=\"ant-upload-text\">点击或拖动文件到此区域上传文件</p>\r\n                                <p className=\"ant-upload-hint\">\r\n                                    支持单次或批量上传\r\n                        </p>\r\n                            </Dragger>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                发布课程\r\n                        </Button>\r\n                        </Form.Item>\r\n\r\n\r\n                        {/* 上传课程封面和课程文件的value值，只能这样写了0.0 */}\r\n                        <Form.Item\r\n                            name=\"fengmian\"\r\n                            initialValue={fengmianimg}\r\n                        ></Form.Item>\r\n                        <Form.Item\r\n                            name=\"coursefile\"\r\n                            initialValue={coursefilelist}\r\n                        ></Form.Item>\r\n                        {/* ************************************ */}\r\n                    </Form>\r\n\r\n               \r\n\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}",["114","115"],"D:\\Workspace\\demo01\\src\\pages\\login\\index.jsx",[],"D:\\Workspace\\demo01\\src\\pages\\test\\index.jsx",["116","117","118"],"D:\\Workspace\\demo01\\src\\pages\\component\\video\\index.jsx",["119","120","121"],"import React, { useEffect, useState, useRef } from 'react'\r\n//import Draggable from 'react-draggable';\r\n\r\nexport default function Video() {\r\n\r\n    useEffect(() => {\r\n        //访问用户媒体设备的兼容方法\r\n        function getUserMedia(constraints, success, error) {\r\n            if (navigator.mediaDevices.getUserMedia) {\r\n                //最新的标准API\r\n                navigator.mediaDevices.getUserMedia(constraints).then(success).catch(error);\r\n            } else if (navigator.webkitGetUserMedia) {\r\n                //webkit核心浏览器\r\n                navigator.webkitGetUserMedia(constraints, success, error)\r\n            } else if (navigator.mozGetUserMedia) {\r\n                //firfox浏览器\r\n                navigator.mozGetUserMedia(constraints, success, error);\r\n            } else if (navigator.getUserMedia) {\r\n                //旧版API\r\n                navigator.getUserMedia(constraints, success, error);\r\n            }\r\n        }\r\n\r\n        let video = document.getElementById('video');\r\n        // let canvas = document.getElementById('canvas');\r\n        // let context = canvas.getContext('2d');\r\n\r\n        function success(stream) {\r\n            //兼容webkit核心浏览器\r\n            let CompatibleURL = window.URL || window.webkitURL;\r\n            //将视频流设置为video元素的源\r\n            console.log(stream);\r\n\r\n            //video.src = CompatibleURL.createObjectURL(stream);\r\n            video.srcObject = stream;\r\n            video.play();\r\n        }\r\n\r\n        function error(error) {\r\n            console.log(`访问用户媒体设备失败${error.name}, ${error.message}`);\r\n        }\r\n\r\n        if (navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia) {\r\n            //调用用户媒体设备, 访问摄像头\r\n            getUserMedia({ video: { width: 480, height: 320 } }, success, error);\r\n        } else {\r\n            alert('不支持访问用户媒体');\r\n        }\r\n\r\n        //拍照按钮部分\r\n        // document.getElementById('capture').addEventListener('click', function () {\r\n        //     context.drawImage(video, 0, 0, 480, 320);\r\n        // })\r\n    })\r\n\r\n    return (\r\n        <div>\r\n        {/* <Draggable>  */}\r\n        <div style={{marginTop:\"35px\"}}>\r\n            {/* video标签里的【control参数】可以设置暂停按钮 <video id=\"video\" width=\"480\" height=\"320\" controls>  */}\r\n           \r\n            <video id=\"video\" width=\"100%\" height=\"300px\" >  \r\n            </video>\r\n            {/* <div>\r\n                <button id=\"capture\">拍照</button>\r\n            </div>*/}\r\n        </div>\r\n\r\n        {/* </Draggable> */}\r\n        {/* <canvas id=\"canvas\" width=\"480\" height=\"320\" style={{background:\"red\"}}></canvas>  */}\r\n        </div>\r\n    )\r\n}","D:\\Workspace\\demo01\\src\\pages\\component\\infCourse\\index.jsx",["122","123","124","125","126"],"import React, { useEffect, useState } from 'react'\nimport { Breadcrumb, Popover, Row, Col, Button, Drawer, Form, Input, Select, DatePicker } from 'antd';\nimport { Card, Image } from 'antd';\n\nimport {\n    HighlightOutlined,\n    InfoCircleOutlined,\n    CloseSquareOutlined\n\n} from '@ant-design/icons';\nimport \"./infCourse.css\"\nimport Axios from 'axios';\nimport Qs from 'qs'\n\nconst { Option } = Select;\n\n/*\n用于展示课程管理的【课程信息】界面\n*/\n\nfunction Courseinf() {\n\n    const [coursedata, setcoursedata] = useState([])   //***注意这里的[]\n    const [courseinform, setcourseinform] = useState({})\n    const [videoaddr, setvideoaddr] = useState(\"\"); //获取视频的地址\n    const [fileurl, setfileurl] = useState([]);\n    const [avator,setavator] = useState(\"\");\n    const [visible, setvisible] = useState(false)\n\n    useEffect(() => {\n        //get请求【课程信息内容】\n        Axios.get(\"http://120.27.236.223:9000/course/list\")\n            .then((res) => {\n                let course = res.data.result\n                console.log(\"返回的courese:\",res.data.result)\n                setcoursedata(course)\n            })\n    }, []);   //第二参数[]内是要监听的参数，没有要监听的参数时，setcoursedata()函数执行时不会触发useEffect()函数\n\n\n    function showDrawer() {\n        setvisible(true)\n    };\n\n    function onClose() {\n        setvisible(false)\n    };\n\n    function clickimg(id) {\n        //console.log(\"查看课程id\" + id)\n        //post请求【课程详细信息内容】\n        Axios({\n            method: 'get',\n            url: \"http://120.27.236.223:9000/course/info/\"+id,\n            \n        }).then((res) => {\n             console.log(id+\"课程信息：\",res.data.result)\n            let coursedetail = res.data.result\n            if(coursedetail.courseAvatarPath==null){\n                setavator(\"https://p.ananas.chaoxing.com/star3/origin/6ce77a10dd3268daa7ba6c93e5e76459.jpg\")\n            }\n            else{\n                setavator(coursedetail.courseAvatarPath)\n            }\n            if(coursedetail.courseFilePath==null){\n                setvideoaddr(\"\")\n                console.log(\"1:\"+coursedetail)\n                setfileurl([])\n                console.log(fileurl)\n            }\n            else{\n                if (coursedetail.courseFilePath[0].slice(-3) === \"mp4\") {\n                    setvideoaddr(coursedetail.courseFilePath[0])\n                    setfileurl(coursedetail.courseFilePath.slice(1))\n                }\n                else {\n                    setvideoaddr(\"\")\n                    setfileurl(coursedetail.courseFilePath)\n                }\n\n            }\n            \n            coursedetail.courseId = id\n            //console.log(\"返回的课程详情\", coursedetail)\n            setcourseinform(coursedetail)\n            document.getElementById(\"courseinfodetail\").style.display = 'block';\n            if (document.getElementById(\"courseinfodetail\").style.display = 'block')\n                //console.log(\"页面展示\")\n                document.getElementsByClassName(\"courseinfo\")[0].style.display = \"none\";\n        })\n    }\n    function closeinfodetail() {\n        console.log(\"关闭查看课程详细信息\")\n        document.getElementById(\"courseinfodetail\").style.display = 'none';\n        document.getElementsByClassName(\"courseinfo\")[0].style.display = \"block\";\n    }\n    return (\n\n        <div className=\"allcourseinfo\">\n            {/* 头部面包屑 */}\n            <Breadcrumb style={{ margin: '16px 0', fontSize: \"20px\" }}>\n                <Breadcrumb.Item>\n                    <HighlightOutlined />\n                    <span>\n                        课程管理\n                            </span>\n                </Breadcrumb.Item>\n\n                <Breadcrumb.Item>\n                    <InfoCircleOutlined />\n                    <span>课程信息</span>\n                </Breadcrumb.Item>\n            </Breadcrumb>\n\n            {/* 课程详细信息 */}\n            <div id=\"courseinfodetail\">\n                {/* 关闭查看【课程详情】按钮 */}\n                <Row justify=\"end\">\n                    <Col span={1}>\n                        <CloseSquareOutlined onClick={closeinfodetail} style={{ fontSize: \"30px\" }} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={13} lg={13} xl={13}>\n                        {\n                            (videoaddr.slice(-3) !== \"mp4\") ?\n                                <Image\n                                    style={{}}\n                                    width={400}\n                                    src={avator}\n                                />\n                                :\n                                <video id=\"onlinevideo\" style={{ width: \"100%\" }} src={videoaddr} controls></video>\n                        }\n                    </Col>\n                    <Col md={3} lg={3} xl={3}></Col>\n                    <Col md={8} lg={8} xl={8}>\n                        <div style={{ border: \"1px solid black\" }}>\n                            <div style={{ padding: '10px', paddingLeft: '20px' }}>课程名称：{courseinform.courseName}</div>\n\n                            <div style={{ padding: '10px', paddingLeft: '20px' }}>课程编号：{courseinform.courseId}</div>\n\n                            <div style={{ padding: '10px', paddingLeft: '20px' }}>发布时间：{courseinform.courseReleaseTime}</div>\n\n                            <div style={{ padding: '10px', paddingLeft: '20px' }}>主讲人：{courseinform.courseTeacher}</div>\n\n                            <div style={{ padding: '10px', paddingLeft: '20px' }}>\n                                课程描述：\n                                    <Card bordered={false}>\n                                    <p>{courseinform.courseIntroduction}</p>\n                                </Card>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n                <Row style={{ paddingTop: '5px' }}>\n                    {\n                        fileurl.map((item, index) => {\n                            return (\n                                <Col key={index + item} style={{ paddingTop: '5px' }} md={24} lg={24} xl={3}>\n                                    <a id=\"courselink\" href={item} target=\"_blank\">课件{index + 1}下载</a>\n                                </Col>\n                            )\n                        })\n                    }\n                    <Col>\n                        <Button onClick={showDrawer}>\n                            完成学习\n                        </Button>\n                    </Col>\n                </Row>\n\n            </div>\n\n\n            {/* 课程主体信息 */}\n            <div className=\"courseinfo\">\n                {/* 【水平间隔，垂直间隔】 */}\n                <Row gutter={[24, 32]}>\n                    {\n                        coursedata.map((cour, index) => {\n                            return (\n\n                                <Col md={12} lg={8} xl={6} key={cour.courseId} >\n                                    <a className=\"aaa\" onClick={clickimg.bind(this, cour.courseId)} id={cour.courseId}>\n                                        <img\n                                            className=\"imgstyle\"\n                                            src={cour.courseAvatarPath}\n                                            alt=\"Tup2\"\n                                        />\n                                    </a>\n                                    <dl className=\"dlstyle\">\n                                        <Popover content={cour.courseIntroduction} title=\"【课程简介】\" trigger=\"hover\">\n                                            <dt>{cour.courseName}</dt>\n                                            <dt>发布人：{cour.courseTeacher}</dt>\n                                            <dt>发布时间：{cour.courseReleaseTime}</dt>\n                                        </Popover>\n                                    </dl>\n\n                                </Col>\n\n                            )\n\n                        })\n                    }\n                </Row>\n            </div>\n\n\n            {/* 答题抽屉信息 */}\n            <Drawer\n                title=\"课堂测试题目\"\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            关闭\n                        </Button>\n                        <Button onClick={onClose} type=\"primary\">\n                           提交\n                        </Button>\n                    </div>\n                }\n            >\n                <Form layout=\"vertical\" hideRequiredMark>\n\n                            <Form.Item\n                                name=\"q1\"\n                                label=\"1.C语言源程序的基本单位是什么？\" //函数\n                                rules={[{ required: true, message: 'Please enter your answer' }]}\n                            >\n                                <Input placeholder=\"Please enter your answer\" />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"q2\"\n                                label=\"2.假设变量a,b均为整型，表达式(a=5;b=2;a>b?a++:b++;a+b)的值是？\"  //8\n                                rules={[{ required: true, message: 'Please enter your answer' }]}\n                            >\n                                <Input placeholder=\"Please enter your answer\" />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"q3\"\n                                label=\"3.在c语言程序中，以下说法正确的是？\" //B\n                                rules={[{ required: true, message: 'Please enter your answer' }]}\n                            >\n                                <Select placeholder=\"Please select an answer\">  \n                                    <Option value=\"a\">A 函数的定义可以嵌套，但函数的调用不可以嵌套</Option>\n                                    <Option value=\"b\">B 函数的定义不可以嵌套，但函数的调用可以嵌套</Option>  \n                                    <Option value=\"c\">C 函数的定义和函数的调用都不可以嵌套</Option>\n                                    <Option value=\"d\">D 函数的定义和函数的调用都可以嵌套</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"q4\"\n                                label=\"4.以下对二维数组a的声明正确的是？\" //B\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Select placeholder=\"Please select an answer\">  \n                                    <Option value=\"a\">A int a[3][]</Option>\n                                    <Option value=\"b\">B int a(3,4)</Option>  \n                                    <Option value=\"c\">C int a[1][4]</Option>\n                                    <Option value=\"d\">D int a(3)(4)</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"q5\"\n                                label=\"5.算法的计算量的大小称为计算的？\" //B\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Select placeholder=\"Please select an answer\">  \n                                    <Option value=\"a\">A 效率</Option>\n                                    <Option value=\"b\">B 复杂性</Option>  \n                                    <Option value=\"c\">C 现实性</Option>\n                                    <Option value=\"d\">D 难度</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"q6\"\n                                label=\"6.以下哪个数据结构不是多型数据类型？\" //B\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Select placeholder=\"Please select an answer\">  \n                                    <Option value=\"a\">A 栈</Option>\n                                    <Option value=\"b\">B 广义表</Option>  \n                                    <Option value=\"c\">C 有向图</Option>\n                                    <Option value=\"d\">D 字符串</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"q7\"\n                                label=\"7.以下属于逻辑结构的是？\" //B\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Select placeholder=\"Please select an answer\">  \n                                    <Option value=\"a\">A 顺序表</Option>\n                                    <Option value=\"b\">B 哈希表</Option>  \n                                    <Option value=\"c\">C 有序表</Option>\n                                    <Option value=\"d\">D 单链表</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"q8\"\n                                label=\"8.衡量一个算法好坏的标准是？\" //B\n                                rules={[{ required: true, message: 'Please enter user name' }]}\n                            >\n                                <Select placeholder=\"Please select an answer\">  \n                                    <Option value=\"a\">A 运行速度快</Option>\n                                    <Option value=\"b\">B 占用空间少</Option>  \n                                    <Option value=\"c\">C 时间复杂度低</Option>\n                                    <Option value=\"d\">D 代码短</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"q9\"\n                                label=\"9.什么叫做二叉树？\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'please enter answer description',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea rows={4} placeholder=\"please enter answer description\" />\n                            </Form.Item>\n                </Form>\n            </Drawer>\n        </div>\n    )\n}\nexport default Courseinf","D:\\Workspace\\demo01\\src\\pages\\home\\index.js",[],"D:\\Workspace\\demo01\\src\\pages\\findpass\\index.js",["127","128"],"import React, { useState } from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport { Card, Input,Upload, Button, message } from 'antd';\r\nimport { PhoneOutlined, VerifiedOutlined, KeyOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport './findpass.css';\r\n\r\nfunction FindPass() {\r\n\r\n    const [userPhone, setuserPhone] = useState(\"\")\r\n    const [VerCode, setVerCode] = useState(\"\")\r\n    const [PassWord, setPassWord] = useState(\"\")\r\n    const [ConfirmPass, setConfirmPass] = useState(\"\")\r\n    //const [isLoading,setIsLoading] = useState(false)\r\n\r\n    const checkRegister = () => {\r\n        //test\r\n        console.log(\"手机号：\", userPhone)\r\n        console.log(\"验证码：\", VerCode)\r\n        console.log(\"密码：\", PassWord)\r\n        console.log(\"确认密码：\", ConfirmPass)\r\n\r\n    };\r\n\r\n    const props = {\r\n        beforeUpload: file => {\r\n            if (file.type !== 'image/png') {\r\n                message.error(`${file.name} is not a png file`);\r\n            }\r\n            return file.type === 'image/png' ? true : Upload.LIST_IGNORE;\r\n        },\r\n        onChange: info => {\r\n            console.log(info.fileList);\r\n        },\r\n    };\r\n    const clickvercode=()=>{\r\n            console.log(\"获取验证码的手机号：\",userPhone)\r\n    }\r\n\r\n    return (\r\n        <div className=\"findpass-div\">\r\n\r\n            <Card title=\"找回密码\" bordered={true} style={{ width: 400,textAlign:\"center\"}}>\r\n                <Input\r\n                    id=\"userphone\"\r\n                    size=\"large\"\r\n                    placeholder=\"输入注册手机号\"\r\n                    prefix={<PhoneOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setuserPhone(e.target.value) }}\r\n                />\r\n                <Button type=\"link\" style={{ margin: \"10px 0px\" }} onClick={clickvercode}>点击获取验证码</Button>\r\n                <Input\r\n                    id=\"vercode\"\r\n                    size=\"large\"\r\n                    placeholder=\"输入验证码\"\r\n                    prefix={<VerifiedOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setVerCode(e.target.value) }}\r\n                />\r\n                <br /><br />\r\n                <Input.Password\r\n                    id=\"password\"\r\n                    size=\"large\"\r\n                    placeholder=\"输入修改密码\"\r\n                    prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setPassWord(e.target.value) }}\r\n                />\r\n                <br /><br />\r\n                <Input.Password\r\n                    id=\"confirmpass\"\r\n                    size=\"large\"\r\n                    placeholder=\"再次输入密码\"\r\n                    prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setConfirmPass(e.target.value) }}\r\n                />\r\n                <br /> <br />\r\n                \r\n                <Button type=\"primary\" size=\"large\" block onClick={checkRegister}>修改密码</Button>\r\n\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default FindPass","D:\\Workspace\\demo01\\src\\App.js",[],"D:\\Workspace\\demo01\\src\\index.js",[],"D:\\Workspace\\demo01\\src\\pages\\home\\component\\navigate\\index.jsx",["129","130","131","132","133","134"],"D:\\Workspace\\demo01\\src\\pages\\register\\index.jsx",[],"D:\\Workspace\\demo01\\src\\pages\\register\\component\\register\\index.jsx",[],"D:\\Workspace\\demo01\\src\\pages\\login\\component\\login\\index.jsx",["135"],"import React, { useEffect }  from 'react'\r\nimport { Form, Input, Button ,message,Checkbox } from 'antd';\r\nimport {  UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport axios from \"axios\"\r\nimport Qs from 'qs'\r\nimport { useHistory } from 'react-router-dom';  //实现登录成功后的页面跳转\r\nimport cookie from 'react-cookies'              //存储登录信息到cookie\r\n\r\nfunction Loginn() {\r\n\r\n    let history = useHistory();\r\n    let inFifteenMinutes = new Date(new Date().getTime() + 24 * 3600 * 1000);//设置cookie有效期：一天\r\n\r\n    useEffect(()=>{\r\n        //通过读取cookie信息，判断用户是否已经登录。\r\n        //有登录信息-->跳转主页\r\n        //无登录信息-->先登录\r\n        let user=cookie.load(\"user\")\r\n        console.log(\"查看cookile信息user:\",user)\r\n        if (user!=null){\r\n            console.log(\"有cookie，自动跳转至主页\")\r\n            history.push('/');\r\n            message.info(\"您已登录，自动跳转至主页\")\r\n        }\r\n    })\r\n\r\n  \r\n    const onFinish = (values) => {\r\n      console.log('登录信息：', values);\r\n      axios({\t\r\n        method:'post',\r\n        //url:\"http://www.aifixerpic.icu/upload/login\",\r\n        url:\"http://120.27.236.223:9000//login/login\",\r\n        data:{\r\n            \"loginAccount\": values.username,\r\n            \"password\":values.password,\r\n        },\r\n        header:{\r\n          'Content-Type':'application/json'  //如果写成contentType会报错\r\n        }\r\n    }).then(res => {\r\n        console.log(\"res:\",res.data)\r\n        if(res.data.success===true){\r\n            //console.log(\"cookie到期时间\"+inFifteenMinutes)\r\n            cookie.save('user',values.username, { path: '/',expires:inFifteenMinutes})\r\n            cookie.save('role',values.role, { path: '/',expires:inFifteenMinutes})\r\n            //cookie.save('pass',PassWord, { path: '/' })\r\n            message.success('登录成功,跳转主页...',4);\r\n            history.push('/');\r\n        }else if(res.data.success===false){\r\n            message.error('登录失败，请检查用户名或密码',4);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        message.error('登陆失败 '+error,4);\r\n      })\r\n    }\r\n  \r\n  return (\r\n\r\n    <Form\r\n      name=\"normal_login\"\r\n      className=\"login-form\"\r\n      initialValues={{ remember: true }}\r\n      onFinish={onFinish}\r\n      style={{padding:\"20px\" , background:\"rgba(153, 153, 161, 0.133)\" }}\r\n     \r\n    >\r\n      <Form.Item style={{fontSize:\"20px\",textAlign:\"center\"}}>\r\n        系统登录\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[{ required: true, message: '用户名不能为空!' }]}\r\n      >\r\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[{ required: true, message: '密码不能为空!' }]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"密码\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"role\" valuePropName=\"checked\" style={{textAlign:\"center\"}}>\r\n          <Checkbox>教师登录</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <a className=\"login-form-forgot\" href=\"findpass\" style={{ marginLeft: \"30px\", float: \"left\" }}> 忘记密码</a>\r\n        <a href=\"/register\" style={{ marginRight: \"30px\", float: \"right\" }}>立即注册</a>\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\r\n          登录\r\n      </Button>\r\n      </Form.Item>\r\n    </Form>\r\n\r\n  );\r\n}\r\n\r\nexport default Loginn;","D:\\Workspace\\demo01\\src\\pages\\component\\device\\index.jsx",["136","137","138","139"],"import React,{ useEffect } from 'react'\r\nimport * as echarts from 'echarts';\r\nimport axios from \"axios\"\r\nimport { Breadcrumb,Result,Row,Col } from 'antd';\r\nimport Devicel from \"./leftdev\"\r\nimport Devicer from \"./rightdev\"\r\nimport {\r\n    HighlightOutlined,\r\n    InfoCircleOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Device() {\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{ margin: '16px 0', fontSize: \"20px\" }}>\r\n                <Breadcrumb.Item>\r\n                    <HighlightOutlined />\r\n                    <span>\r\n                        设备管理\r\n                            </span>\r\n                </Breadcrumb.Item>\r\n\r\n                <Breadcrumb.Item>\r\n                    <InfoCircleOutlined />\r\n                    <span>设备信息与组队信息</span>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>         \r\n\r\n           <Row gutter={[24,12]}>\r\n               <Col span={12}>\r\n                    <Devicel />\r\n               </Col>\r\n               <Col span={12}>\r\n                    <Devicer />\r\n               </Col>\r\n              \r\n\r\n           </Row>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Device","D:\\Workspace\\demo01\\src\\pages\\component\\head\\index.jsx",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import axios from 'axios'\r\nimport React,{useState,useEffect,useCallback,useRef} from 'react'\r\nimport * as THREE from \"three\"\r\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\"\r\nimport Websocket from 'react-websocket';\r\n\r\n\r\nexport default function Head() {\r\n\r\n    const Body=useRef()\r\n    const Scene=useRef(new THREE.Scene()).current   //场景\r\n    const Camera=useRef(new THREE.PerspectiveCamera()).current  //透视相机\r\n    const Render=useRef(new THREE.WebGLRenderer({antialias:true})).current  //渲染器  antialias - 是否执行抗锯齿\r\n    const Meshs=useRef([]).current              //用于一个场景内添加多个物体\r\n    const lights=useRef([]).current             //一个场景添加多个灯光\r\n    const Isdowm=useRef(false)              //判断鼠标是否按下，默认false（未按下）\r\n    const PI=useRef(15)\r\n    const R=useRef(90)\r\n    const id=useRef(null)\r\n\r\n   \r\n\r\n    //加载模型\r\n    const loadermodel=useCallback(()=>{  \r\n        const loader=new FBXLoader()\r\n        \r\n        loader.setPath('/static/')\r\n        loader.load(\"HAIR.fbx\",(obj)=>{\r\n            //console.log(obj)\r\n            obj.position.set(0, 0,0)\r\n            obj.scale.set(0.02,0.02,0.02)\r\n            \r\n            \r\n            Meshs.push(obj)\r\n            Scene.add(obj)\r\n\r\n        })\r\n    },[])\r\n\r\n\r\n    //创建灯光函数\r\n    const createlioght=useCallback(()=>{\r\n        //太阳光\r\n        const dirLight=new THREE.DirectionalLight(\"#ffffff\",0.5)          //平行光\r\n        dirLight.position.set(100,100,100)          //灯光位置\r\n        //环境光\r\n        const amblight=new THREE.AmbientLight(\"#ffffff\",0.5)\r\n\r\n        Scene.add(dirLight,amblight)\r\n        lights.push(dirLight,amblight)\r\n    },[])\r\n\r\n    //按下\r\n    const dowm=useCallback(()=>{\r\n        Isdowm.current=true;\r\n    },[])\r\n    //抬起\r\n    const up=useCallback(()=>{\r\n        Isdowm.current=false;\r\n    },[])\r\n    //鼠标移动\r\n    const move=useCallback((event)=>{\r\n        if(Isdowm.current==false)return\r\n        //console.log(event)\r\n        R.current+=event.movementX*0.5\r\n        const x=PI.current*Math.cos(R.current/180*Math.PI)\r\n        const y=Camera.position.y+event.movementY*0.1\r\n        const z=PI.current*Math.sin(R.current/180*Math.PI)\r\n\r\n        Camera.position.set(x,y,z)\r\n        Camera.lookAt(0,0,0)\r\n    },[])\r\n\r\n    const init=useCallback(()=>{\r\n        Render.setSize(Body.current.offsetWidth,Body.current.offsetHeight)\r\n        //设置相机参数\r\n        Camera.aspect=Body.current.offsetWidth / Body.current.offsetHeight\r\n        Camera.fov=45\r\n        Camera.near=1\r\n        Camera.far=1000\r\n        Camera.position.set(0,0,PI.current)     //相机的位置\r\n        Camera.lookAt(0,0,0)            //相机的注视点\r\n        Camera.updateProjectionMatrix()\r\n    },[Render,Body])\r\n\r\n    //创建立方体\r\n    const createRect=useCallback(()=>{\r\n        const rect=new THREE.BoxBufferGeometry(2,2,2)                       //设置【物体】框架 向量\r\n        const meshBasicMater=new THREE.MeshBasicMaterial( {color: 0x00ff00}  )     //选择【材质】:MeshBasicMaterial基础网格材质\r\n        const mesh =new THREE.Mesh(rect,meshBasicMater)                     //mesh代表网格：由【物体】和【材质】组成\r\n        mesh.position.set(0,0,0)\r\n        Scene.add(mesh)             //添加到场景中\r\n        Meshs.push(mesh)\r\n    },[])\r\n\r\n    //创建3d文字\r\n    const create3dword=useCallback(()=>{\r\n        var loader = new THREE.FontLoader();\r\n        const lambert=new THREE.MeshLambertMaterial({color:\"blue\"})\r\n        \r\n        loader.load(\"fonts/helvetiker_regular.typefacesss.json\", function ( font ) {\r\n            var geometry = new THREE.TextGeometry( 'three.js!', {\r\n                font: font,\r\n                size: 80,\r\n                height: 5,\r\n                curveSegments: 12,\r\n                bevelEnabled: true,\r\n                bevelThickness: 10,\r\n                bevelSize: 8,\r\n                bevelSegments: 5\r\n            } );\r\n           const mesh =new THREE.Mesh(lambert,geometry) \r\n           mesh.position.set(0,0,0)\r\n           Scene.add(mesh)           \r\n           Meshs.push(mesh)\r\n        } );\r\n       \r\n       \r\n    })\r\n\r\n    //创建线条\r\n    // const createLine=useCallback(()=>{\r\n    //     const lineMater=new THREE.LineBasicMaterial()\r\n    //     var geomatry = new THREE.GeometryUtils\r\n    //     for(let i=0;i<5000;i++){\r\n    //         const x=Math.random()*2-1\r\n    //         const y=Math.random()*2-1\r\n    //         const z=Math.random()*2-1\r\n    //         geomatry.vertices.push(new THREE.Vector3(x,y,z))\r\n    //     }\r\n    //     const mesh=new THREE.Line(geomatry,lineMater)\r\n    //     mesh.position.set(4,0,0)\r\n    //     Scene.add(mesh)\r\n    //     Meshs.push(mesh)\r\n    // })\r\n\r\n    // 创建Lambert网格材质立方块\r\n    const createLambert=useCallback=>{\r\n        const lambert=new THREE.MeshLambertMaterial({color:\"red\"})      //材质为lambert\r\n        const rect=new THREE.BoxBufferGeometry(2,2,2)                   //物体为立方块\r\n        const mesh=new THREE.Mesh(rect,lambert)                         //材质和物体融合\r\n        mesh.position.set(0,0,0)                                       //物块的位置\r\n        Scene.add(mesh)                                                 //\r\n        Meshs.push(mesh)\r\n    }\r\n\r\n\r\n    const renderScene=useCallback((a,b,c)=>{\r\n        Render.render(Scene,Camera)\r\n        Meshs.forEach(item=>{\r\n            \r\n            item.rotation.x=a*1/180*Math.PI\r\n            item.rotation.y=b*1/180*Math.PI\r\n            item.rotation.z=c*1/180*Math.PI\r\n            console.log(item.rotation.x,item.rotation.y,item.rotation.z) \r\n          \r\n        })\r\n\r\n        //场景中的物体旋转起来\r\n        // Meshs.forEach(item=>{\r\n            \r\n        //    item.rotation.y+=1/180*Math.PI\r\n           \r\n        //     console.log(item.rotation.x,item.rotation.y,item.rotation.z) \r\n          \r\n        // })\r\n       \r\n        //id.current=window.requestAnimationFrame(()=>renderScene())       //帧循环函数\r\n        //记录当前的循环速度\r\n    },[Render,Meshs])\r\n\r\n    //画布修改时更改画面大小\r\n    const setView=()=>{\r\n        Render.setSize(document.body.clientWidth,document.body.clientHeight)\r\n        Camera.aspect=Body.current.offsetWidth / Body.current.offsetHeight\r\n        Camera.updateProjectionMatrix()\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        \r\n        Body.current.append(Render.domElement)\r\n        init()\r\n        createlioght()          //创建灯光\r\n        //createLambert()       //3维正方块\r\n        //create3dword()        //3维字\r\n        loadermodel()       //加载模型\r\n       \r\n\r\n     \r\n\r\n       /** 发送axios请求获取头部姿态数据\r\n        *  现在修改为使用websocket的onmessage()函数来请求数据，然后用renderscene()函数修改头部姿态\r\n            axios.get(\"/headrotate.json\").then((res)=>{\r\n            var num=res.data.length\r\n            var i=0\r\n            var int=setInterval(() => {\r\n                renderScene(res.data[i][0],res.data[i][2],res.data[i][1]);\r\n                i++;\r\n                if(i===num){\r\n                    clearInterval(int)\r\n                }\r\n                \r\n            },1000/10)\r\n        \r\n        \r\n        }) */\r\n       \r\n\r\n        document.addEventListener('resize',setView)\r\n        \r\n    \r\n        return ()=>{   \r\n            document.removeEventListener('resize',setView)  //取消窗口大小监听\r\n            cancelAnimationFrame(id.current)        //对帧循环函数进行取消\r\n            Meshs.forEach(item=>{\r\n                Scene.remove(item)\r\n                // item.geometry.dispose()         //销毁【物体】\r\n                // item.material.dispose()         //销毁【材质】\r\n            })\r\n            lights.forEach(item=>{\r\n                Scene.remove(item)\r\n            })\r\n            Render.dispose()                    //销毁【渲染器】\r\n            Scene.dispose()                     //销毁【场景】\r\n            //clearInterval(int)\r\n        }\r\n    },[])\r\n\r\n    function onmessage(e){\r\n        //console.log(e)\r\n        const tmp=eval(e)\r\n        renderScene(tmp[0],tmp[2],tmp[1])\r\n    }\r\n    function onopen(){\r\n        console.log('websocket 连接成功');    \r\n    }\r\n    function onclose(){\r\n        console.log(\"websocket 连接关闭\");\r\n    }\r\n    function onerror(e){\r\n        console.log(\"发生错误\"+e)\r\n    }\r\n\r\n    return(\r\n        <div ref={Body} style={{width:\"100%\",height:\"292px\",paddingTop:\"38px\"}} onMouseDown={dowm} onMouseMove={move} onMouseUp={up}>\r\n\r\n            <Websocket\r\n                url='ws://127.0.0.1:5678'\r\n                onMessage={onmessage}\r\n                onOpen={onopen}\r\n                onClose={onclose}\r\n                onError={onerror}\r\n                reconnect={true}\r\n                debug={true}\r\n            >\r\n            </Websocket>\r\n        </div>\r\n    )\r\n    \r\n}","D:\\Workspace\\demo01\\src\\pages\\component\\classroom3d\\index.jsx",["156"],"import React, { useEffect, useState } from 'react'\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl'\r\nimport { Breadcrumb, Statistic, Card, Row, Col, Result } from 'antd';\r\nimport {\r\n    HighlightOutlined,\r\n    InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport axios from \"axios\"\r\nimport \"./classroom3d.css\"\r\nimport cookie from 'react-cookies'\r\nfunction Classroom3d() {\r\n    //usestate来同步值\r\n    const [maxstudentdata, setmaxstudentdata] = useState([]);\r\n    const [maxstudent, setmaxstudent] = useState([]);\r\n    const [minstudentdata, setminstudentdata] = useState([]);\r\n    const [minstudent, setminstudent] = useState([]);\r\n    const [maxstudentdata2, setmaxstudentdata2] = useState([]);\r\n    const [maxstudent2, setmaxstudent2] = useState([]);\r\n    const [minstudentdata2, setminstudentdata2] = useState([]);\r\n    const [minstudent2, setminstudent2] = useState([]);\r\n    const [maxstudentdata3, setmaxstudentdata3] = useState([]);\r\n    const [maxstudent3, setmaxstudent3] = useState([]);\r\n    const [minstudentdata3, setminstudentdata3] = useState([]);\r\n    const [minstudent3, setminstudent3] = useState([]);\r\n    useEffect(() => {\r\n\r\n        //先进行用户角色的判断，然后决定展示内容\r\n        let role = cookie.load(\"role\")\r\n        //console.log(\"判断角色：\"+role)\r\n        if (role !== \"true\") {\r\n            document.getElementById(\"mains\").style.display = 'none';\r\n            document.getElementsByClassName(\"site-statistic-demo-card\")[0].style.display=\"none\"\r\n            document.getElementById(\"noaccess\").style.display = \"display\";\r\n        } else {\r\n            document.getElementById(\"mains\").style.display = 'display';\r\n            document.getElementById(\"noaccess\").style.display = \"none\";\r\n        }\r\n        //用户角色判断完成\r\n\r\n        var chartDom = document.getElementById('mains');\r\n        var myChart = echarts.init(chartDom);\r\n        var option;\r\n        var data = [[]]\r\n        var hours = ['第一列', '第二列', '第三列', '第四列'];\r\n        var days = ['第一排', '第二排', '第三排', '第四排', '第五排'];\r\n\r\n        axios.get('/classroom3d.json').then(res => {\r\n            console.log(res);\r\n            data = res.data;\r\n            var max = 0;\r\n            var maxname = '';\r\n            var min = 101;\r\n            var minname = '';\r\n            var max2 = 0;\r\n            var max2name = '';\r\n            var min2 = 102;\r\n            var min2name = '';\r\n            var max3 = 0;\r\n            var max3name = '';\r\n            var min3 = 103;\r\n            var min3name = '';\r\n            var you = 0;\r\n            var liang = 0;\r\n            var zhong = 0;\r\n            var cha = 0;\r\n            console.log(data);\r\n            //计算出各个分数段的人数和最高分最低分\r\n            for (var i = 0; i < data.length; i++) {\r\n                if (data[i][2] > max) {\r\n                    max3 = max2;\r\n                    max3name = max2name;\r\n                    max2 = max;\r\n                    max2name = max2name;\r\n                    max = data[i][2];\r\n                    maxname = data[i][3];\r\n                } else if (data[i][2] > max2) {\r\n                    max3 = max2;\r\n                    max3name = max2name;\r\n                    max2 = data[i][2];\r\n                    max2name = data[i][3];\r\n                } else if (data[i][2] > max3) {\r\n                    max3 = data[i][2];\r\n                    max3name = data[i][3];\r\n                }\r\n                if (data[i][2] < min) {\r\n                    min3 = min2;\r\n                    min3name = min2name;\r\n                    min2 = min;\r\n                    min2name = minname;\r\n                    min = data[i][2];\r\n                    minname = data[i][3];\r\n                } else if (data[i][2] < min2) {\r\n                    min3 = min2;\r\n                    min3name = min2name;\r\n                    min2 = data[i][2];\r\n                    min2name = data[i][3];\r\n                } else if (data[i][2] < min3) {\r\n                    min3 = data[i][2];\r\n                    min3name = data[i][3];\r\n                }\r\n                if (data[i][2] >= 90) {\r\n                    you++;\r\n                } else if (data[i][2] >= 80) {\r\n                    liang++;\r\n                } else if (data[i][2] >= 60) {\r\n                    zhong++;\r\n                } else {\r\n                    cha++;\r\n                }\r\n            }\r\n            console.log(max)\r\n            console.log(max2)\r\n            console.log(max3)\r\n            /*  var student = {\r\n                   \"maxone\" : maxname,\r\n                   \"maxpoint\" : max,\r\n                   \"minone\" : minname,\r\n                   \"minpoint\" : min\r\n              };*/\r\n\r\n            setmaxstudentdata(max);\r\n            setmaxstudent(maxname);\r\n            setminstudentdata(min);\r\n            setminstudent(minname);\r\n            setmaxstudentdata2(max2);\r\n            setmaxstudent2(max2name);\r\n            setminstudentdata2(min2);\r\n            setminstudent2(min2name);\r\n            setmaxstudentdata3(max3);\r\n            setmaxstudent3(max3name);\r\n            setminstudentdata3(min3);\r\n            setminstudent3(min3name);\r\n            //将分数分为四类\r\n            var piedata = [[cha, '差'], [zhong, '中'], [liang, '良'], [you, '优']];\r\n            //echarts部分\r\n            option = {\r\n                tooltip: {\r\n\r\n                },\r\n                legend: {\r\n                    left: 'center',\r\n\r\n                },\r\n                visualMap: {\r\n                    max: 100,\r\n                    min: 60,\r\n                    text: ['优秀', '不及格'],\r\n                    inRange: {\r\n                        color: ['#FD6E76', '#FDDD60', '#58D9F9', '#7CFFB2']\r\n                    },\r\n                    id: 3\r\n                },\r\n                xAxis3D: {\r\n                    type: 'category',\r\n                    data: hours,\r\n                    name: '讲台'\r\n                },\r\n                yAxis3D: {\r\n                    type: 'category',\r\n                    data: days,\r\n                    name: '教室侧面'\r\n                },\r\n                zAxis3D: {\r\n                    type: 'value',\r\n                    name: '课堂打分'\r\n                },\r\n                //3d柱状图区域\r\n                grid3D: {\r\n                    id: 3,\r\n                    top: '15%',\r\n                    boxWidth: 200,\r\n                    boxDepth: 80,\r\n\r\n                    light: {\r\n                        main: {\r\n                            intensity: 1.2\r\n                        },\r\n                        ambient: {\r\n                            intensity: 0.3\r\n                        }\r\n                    },\r\n\r\n                },\r\n                //扇形图的区域\r\n                grid: {\r\n                    width: '30%',\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n                series: [\r\n                    {\r\n                        name: '整体分数',\r\n                        top: 0,\r\n                        type: 'pie',\r\n                        radius: '25%',\r\n                        center: ['50%', '20%'],\r\n                        tooltip: {\r\n                            type: 'item',\r\n                            formatter: function (params) {\r\n                                return \"评分： \" + params.data.name + \"</br>人数： \" + params.data.value;\r\n                            },\r\n                        },\r\n                        itemStyle: {\r\n                            color: function (params) {\r\n                                var colorList = ['#FD6E76', '#FDDD60', '#58D9F9', '#7CFFB2'];\r\n                                return colorList[params.dataIndex]\r\n                            }\r\n                        },\r\n                        //防止饼状图的数据颜色是visualMap\r\n                        data: piedata.map(function (item) {\r\n                            return {\r\n                                value: item[0],\r\n                                name: item[1],\r\n                                visualMap: false,\r\n                            }\r\n                        }),\r\n\r\n                        emphasis: {\r\n                            itemStyle: {\r\n                                shadowBlur: 10,\r\n                                shadowOffsetX: 0,\r\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        type: 'bar3D',\r\n\r\n                        data: data.map(function (item) {\r\n                            return {\r\n                                value: [item[0], item[1], item[2]],\r\n                                name: item[3],\r\n\r\n                            }\r\n                        }),\r\n                        shading: 'lambert',\r\n                        tooltip: {\r\n                            type: 'axis',\r\n                            formatter: function (params) {\r\n                                return \"姓名: \" + params.data.name + \"</br>课堂打分: \" + params.data.value[2]\r\n                            },\r\n                        },\r\n\r\n\r\n                        label: {\r\n                            show: false,\r\n                            fontSize: 16,\r\n                            borderWidth: 1,\r\n                        },\r\n\r\n                        itemStyle: {\r\n                            opacity: 0.8\r\n                        },\r\n\r\n                        emphasis: {\r\n                            label: {\r\n                                fontSize: 20,\r\n                                color: '#900'\r\n                            },\r\n                            itemStyle: {\r\n                                color: '#900'\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            };\r\n            myChart.setOption(option);\r\n        })\r\n\r\n        option && myChart.setOption(option);\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{ margin: '16px 0', fontSize: \"20px\" }}>\r\n                <Breadcrumb.Item>\r\n                    <HighlightOutlined />\r\n                    <span>\r\n                        统计管理\r\n                            </span>\r\n                </Breadcrumb.Item>\r\n\r\n                <Breadcrumb.Item>\r\n                    <InfoCircleOutlined />\r\n                    <span>教室整体打分情况</span>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Row justify=\"center\">\r\n                <Col span={23}>\r\n                    <div id=\"mains\" style={{ width: \"100%\", height: \"600px\", background: \"#DCF5FF\" }}></div>\r\n                    <div id=\"noaccess\" style={{ width: \"100%\" }}>\r\n                        <Result\r\n                            status=\"warning\"\r\n                            title=\"抱歉，整体打分页面只允许老师访问哦！\"\r\n                        />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <div className=\"site-statistic-demo-card\">\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Card>\r\n                            <Statistic\r\n                                title=\"课堂高分\"\r\n                                value={maxstudent + \"      分数: \" + maxstudentdata + \"分\"}\r\n                                precision={2}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Card>\r\n                            <Statistic\r\n                                title=\"课堂低分\"\r\n                                value={minstudent + \"     分数: \" + minstudentdata + \"分\"}\r\n                                precision={2}\r\n                                valueStyle={{ color: '#cf1322' }}\r\n\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Card>\r\n                            <Statistic\r\n                                value={maxstudent2 + \"      分数: \" + maxstudentdata2 + \"分\"}\r\n                                precision={2}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Card>\r\n                            <Statistic\r\n                                value={minstudent2 + \"     分数: \" + minstudentdata2 + \"分\"}\r\n                                precision={2}\r\n                                valueStyle={{ color: '#cf1322' }}\r\n\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Card>\r\n                            <Statistic\r\n                                value={maxstudent3 + \"      分数: \" + maxstudentdata3 + \"分\"}\r\n                                precision={2}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Card>\r\n                            <Statistic\r\n                                value={minstudent3 + \"     分数: \" + minstudentdata3 + \"分\"}\r\n                                precision={2}\r\n                                valueStyle={{ color: '#cf1322' }}\r\n\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Classroom3d","D:\\Workspace\\demo01\\src\\pages\\component\\concer3d\\index.jsx",["157"],"import React, { useEffect } from 'react'\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl'\r\nimport { Breadcrumb, Result, Row, Col } from 'antd';\r\nimport {\r\n    HighlightOutlined,\r\n    InfoCircleOutlined\r\n\r\n} from '@ant-design/icons';\r\nimport axios from \"axios\"\r\nimport cookie from 'react-cookies'\r\n\r\nfunction Statistic() {\r\n    useEffect(() => {\r\n\r\n        //先进行用户角色的判断，然后决定展示内容\r\n        let role = cookie.load(\"role\")\r\n        //console.log(\"判断角色：\"+role)\r\n        if (role !== \"true\") {\r\n            document.getElementById(\"mains\").style.display = 'none';\r\n            document.getElementById(\"noaccess\").style.display = \"display\";\r\n        } else {\r\n            document.getElementById(\"mains\").style.display = 'display';\r\n            document.getElementById(\"noaccess\").style.display = \"none\";\r\n        }\r\n        //用户角色判断完成\r\n\r\n        var chartDom = document.getElementById('mains');\r\n        var myChart = echarts.init(chartDom);\r\n        var option;\r\n        axios.get('/concern3d.json').then(res => {\r\n            console.log(res);\r\n            var data = [[]];\r\n            var dataY = [];\r\n            for(var i=0;i<res.data.data.length;i++){\r\n                data[i] = res.data.data[i].goals;\r\n                dataY[i] = res.data.data[i].name;\r\n            }\r\n            var five = 0;\r\n            var five1 = 0;\r\n            var five2 = 0;\r\n            var five3 = 0;\r\n            var five4 = 0;\r\n            var five5 = 0;\r\n            var five6 = 0;\r\n            var five7 = 0;\r\n            console.log(data);\r\n            var dataX = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245, 250, 255, 260, 265, 270, 275, 280, 285, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 345, 350, 355, 360, 365, 370, 375, 380, 385, 390, 395, 400, 405, 410, 415, 420, 425, 430, 435, 440, 445, 450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, 600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675, 680, 685, 690, 695, 700, 705, 710, 715, 720, 725, 730, 735, 740, 745, 750, 755, 760, 765, 770, 775, 780, 785, 790, 795, 800, 805, 810, 815, 820, 825, 830, 835, 840, 845, 850, 855, 860, 865, 870, 875, 880, 885, 890, 895, 900, 905, 910, 915, 920, 925, 930, 935, 940, 945, 950, 955, 960, 965, 970, 975, 980, 985, 990, 995, 1000, 1005, 1010, 1015, 1020, 1025, 1030, 1035, 1040, 1045, 1050, 1055, 1060, 1065, 1070, 1075, 1080, 1085, 1090, 1095, 1100, 1105, 1110, 1115, 1120, 1125, 1130, 1135, 1140, 1145, 1150, 1155, 1160, 1165, 1170, 1175, 1180, 1185, 1190, 1195, 1200, 1205, 1210, 1215, 1220, 1225, 1230, 1235, 1240, 1245, 1250, 1255, 1260, 1265, 1270, 1275, 1280, 1285, 1290, 1295, 1300, 1305, 1310, 1315, 1320, 1325, 1330, 1335, 1340, 1345, 1350, 1355, 1360, 1365, 1370, 1375, 1380, 1385, 1390, 1395, 1400, 1405, 1410, 1415, 1420, 1425, 1430, 1435, 1440, 1445, 1450, 1455, 1460, 1465, 1470, 1475, 1480, 1485, 1490, 1495, 1500, 1505, 1510, 1515, 1520, 1525, 1530, 1535, 1540, 1545, 1550, 1555, 1560, 1565, 1570, 1575, 1580, 1585, 1590, 1595, 1600, 1605, 1610, 1615, 1620, 1625, 1630, 1635, 1640, 1645, 1650, 1655, 1660, 1665, 1670, 1675, 1680, 1685, 1690, 1695, 1700, 1705, 1710, 1715, 1720, 1725, 1730, 1735, 1740, 1745, 1750, 1755, 1760, 1765, 1770, 1775, 1780, 1785, 1790, 1795, 1800, 1805, 1810, 1815, 1820, 1825, 1830, 1835, 1840, 1845, 1850, 1855, 1860, 1865, 1870, 1875, 1880, 1885, 1890, 1895, 1900, 1905, 1910, 1915, 1920, 1925, 1930, 1935, 1940, 1945, 1950, 1955, 1960, 1965, 1970, 1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015, 2020, 2025, 2030, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080, 2085, 2090, 2095, 2100, 2105, 2110, 2115, 2120, 2125, 2130, 2135, 2140, 2145, 2150, 2155, 2160, 2165, 2170, 2175, 2180, 2185, 2190, 2195, 2200, 2205, 2210, 2215, 2220, 2225, 2230, 2235, 2240, 2245, 2250, 2255, 2260, 2265, 2270, 2275, 2280, 2285, 2290, 2295, 2300, 2305, 2310, 2315, 2320, 2325, 2330, 2335, 2340, 2345, 2350, 2355, 2360, 2365, 2370, 2375, 2380, 2385, 2390, 2395, 2400];\r\n            var vdata = [];\r\n            var sum = dataX.length * dataY.length / 8;\r\n            for (var i = 0; i < dataY.length; i++) {\r\n                vdata[i] = [];   //vdata里面存放的是二维数组\r\n            }\r\n            //将处理完之后的数据存放到 vdata 里面\r\n            for (var t = 0; t < dataY.length; t++) {\r\n                var y = dataY[t];\r\n                for (var k = 0; k < data[0].length; k++) {\r\n                    for (var p = 0; p < dataX.length; p++) {\r\n                        var x = dataX[p];\r\n                        var z = data[t][p];\r\n                        if (dataX[p] < 300) {\r\n                            five += data[t][p];\r\n                        } else if (dataX[p] < 600) {\r\n                            five1 += data[t][p];\r\n                        } else if (dataX[p] < 900) {\r\n                            five2 += data[t][p];\r\n                        } else if (dataX[p] < 1200) {\r\n                            five3 += data[t][p];\r\n                        } else if (dataX[p] < 1500) {\r\n                            five4 += data[t][p];\r\n                        } else if (dataX[p] < 1800) {\r\n                            five5 += data[t][p];\r\n                        } else if (dataX[p] < 2100) {\r\n                            five6 += data[t][p];\r\n                        } else if (dataX[p] <= 2400) {\r\n                            five7 += data[t][p];\r\n                        }\r\n                        vdata[t].push([x, y, z]);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            //雷达图数据\r\n            var arg = [five / sum, five1 / sum, five2 / sum, five3 / sum, five4 / sum, five5 / sum, five6 / sum, five7 / sum];\r\n            console.log(five);\r\n            console.log(five2);\r\n            console.log(five3);\r\n            console.log(five5);\r\n            console.log(sum);\r\n            option = {\r\n                title: {\r\n                    text: '上课各时段学生专注度情况',\r\n                    left: 'center'\r\n                },\r\n                tooltip: {\r\n                    trigger: 'item',\r\n\r\n                    formatter: function (params) {\r\n                        return \"姓名: \" + params.data[1] + \"</br>时间: \" + parseInt(params.data[0] / 60) + \"分\" + params.data[0] % 60 + \"秒\"\r\n                    },\r\n                },\r\n                grid: {\r\n                    width: '30%',\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n                //雷达图样式设定\r\n                radar: {\r\n                    radius: '25%',\r\n                    center: ['80%', '25%'],\r\n                    indicator: [\r\n                        { name: '0:00-5:00', max: 3 },\r\n                        { name: '5:00-10:00', max: 3 },\r\n                        { name: '10:00-15:00', max: 3 },\r\n                        { name: '15:00-20:00', max: 3 },\r\n                        { name: '20:00-25:00', max: 3 },\r\n                        { name: '25:00-30:00', max: 3 },\r\n                        { name: '30:00-35:00', max: 3 },\r\n                        { name: '35:00-40:00', max: 3 },\r\n                    ],\r\n                    name: {\r\n                        fontSize: 12,\r\n                        color: '#191919',\r\n                        shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n                        shadowBlur: 10\r\n                    },\r\n                    splitNumber: 3,\r\n                    splitArea: {\r\n                        areaStyle: {\r\n                            color: ['#FDDD60', '#58D9F9', '#7CFFB2'],\r\n                            shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n                            shadowBlur: 10\r\n                        }\r\n                    },\r\n                },\r\n                //3d图区域\r\n                grid3D: {\r\n                    top: '10%',\r\n                    boxDepth: 350,\r\n                    boxWidth: 450,\r\n                    boxHeigth: 15,\r\n                },\r\n                xAxis3D: {\r\n                    type: 'value',\r\n                    name: '时间',\r\n                    data: dataX,\r\n                    interval: 300,\r\n                    max: 2400\r\n                },\r\n                yAxis3D: {\r\n                    name: '姓名',\r\n\r\n                    data: dataY,\r\n                    axisLabel: {\r\n                        margin: 10,\r\n                        interval: 0\r\n                    }\r\n                },\r\n                zAxis3D: {\r\n                    name: '专注度情况',\r\n                    min: -15,\r\n                    max: 15,\r\n                    axisLabel: {\r\n                        show: false,\r\n                    }\r\n                },\r\n\r\n                visualMap: {\r\n                    max: 3,\r\n                    min: 0,\r\n                    text: ['优秀', '不及格'],\r\n                    inRange: {\r\n                        color: ['#c1232b', '#fcce10', '#0098d9', '#22c3aa']\r\n                    }\r\n                },\r\n                series: [\r\n                    //雷达图\r\n                    {\r\n                        type: 'radar',\r\n                        symbolSize: 0,\r\n                        data: [\r\n                            {\r\n                                value: arg,\r\n                            }\r\n                        ],\r\n                        tooltip: {\r\n                            trigger: 'item',\r\n                            formatter: function (params) { return \"\"; }\r\n                        },\r\n\r\n                        lineStyle: {\r\n                            color: '#c1232b',\r\n                            width: 1.5\r\n                        }\r\n                    },\r\n                    //3d折线图区域\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[0],\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[1]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[2]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[3]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[4]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[5]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[6]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[7]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[8]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[9]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[10]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[11]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[12]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[13]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[14]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[15]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[16]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[17]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[18]\r\n                    },\r\n                    {\r\n                        type: 'line3D',\r\n                        symbolSize: 8,\r\n                        data: vdata[19]\r\n                    },\r\n\r\n                ]\r\n            };\r\n            myChart.setOption(option);\r\n        })\r\n\r\n\r\n\r\n\r\n        option && myChart.setOption(option);\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{ margin: '16px 0', fontSize: \"20px\" }}>\r\n                <Breadcrumb.Item>\r\n                    <HighlightOutlined />\r\n                    <span>\r\n                        统计管理\r\n                            </span>\r\n                </Breadcrumb.Item>\r\n\r\n                <Breadcrumb.Item>\r\n                    <InfoCircleOutlined />\r\n                    <span>全体学生专注度时间序列</span>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Row justify=\"center\">\r\n                <Col span={23}>\r\n                    <div id=\"mains\" style={{ width: \"100%\", height: \"600px\", background: \"#DCF5FF\" }}></div>\r\n                    <div id=\"noaccess\" style={{ width: \"100%\", paddingTop: \"100px\" }}>\r\n\r\n                        <Result\r\n                            status=\"warning\"\r\n                            title=\"抱歉，专注度序列页面只允许老师访问哦！\"\r\n                        />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Statistic","D:\\Workspace\\demo01\\src\\pages\\component\\device\\leftdev\\index.jsx",[],"D:\\Workspace\\demo01\\src\\pages\\component\\device\\rightdev\\index.jsx",[],"D:\\Workspace\\demo01\\src\\pages\\component\\personinfo\\index.jsx",[],"D:\\Workspace\\demo01\\src\\pages\\component\\datasta\\index.jsx",[],"D:\\Workspace\\demo01\\src\\pages\\component\\datasta\\concern\\index.jsx",["158","159","160","161"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport * as echarts from 'echarts';\r\nimport axios from \"axios\"\r\n\r\nfunction Concern() {\r\n\r\n    //页面初始加载时渲染折线图，并将其放入classname=main的div里\r\n    useEffect(() => {\r\n\r\n        var inte;\r\n        var myChart;\r\n        var chartDom = document.getElementById('concern');\r\n        myChart = echarts.init(chartDom);\r\n        var date = [];\r\n        var data = [0];\r\n\r\n\r\n\r\n\r\n\r\n        var option;\r\n\r\n        var base = +new Date(new Date().getFullYear(), new Date().getMonth() + 1, new Date().getDate(), new Date().getHours(), new Date().getMinutes(), new Date().getSeconds());\r\n        var oneDay = 3 * 1000;\r\n\r\n\r\n\r\n\r\n        option = {\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                formatter: function (pt) {\r\n\r\n                    if (pt[0].data == 0) {\r\n                        return \"unconcentrated\";\r\n                    }\r\n                    if (pt[0].data == 1) {\r\n                        return \"barely concentrated\"\r\n                    }\r\n                    if (pt[0].data == 2) {\r\n                        return \"neutraul\"\r\n                    }\r\n                    if (pt[0].data == 3) {\r\n                        return \"concentrated\"\r\n                    }\r\n\r\n                }\r\n            },\r\n\r\n            visualMap: [{\r\n                show: false,\r\n                type: 'continuous',\r\n                seriesIndex: 0,\r\n                min: 0,\r\n                max: 2,\r\n                inRange: {\r\n                    color: ['#c1232b', '#fcce10', '#0098d9', '#22c3aa']\r\n                }\r\n            }],   //沿y轴的渐变\r\n\r\n            title: {\r\n                left: 'center',\r\n                text: '专注度-时间曲线',\r\n            },\r\n            grid: {\r\n                right: '5%',\r\n                bottom: '15%',\r\n                left: '5%'\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: date\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                boundaryGap: [0, '20%']  //最小值最大值上下方扩展的空间比例\r\n            },\r\n            // //内部的填充数据\r\n            // dataZoom: [{\r\n            //     type: 'inside',\r\n            //     start: 0,\r\n            //     end: 100\r\n            // }, {\r\n            //     start: 0,\r\n            //     end: 10\r\n            // }],\r\n            series: [\r\n                {\r\n                    name: '专注度评分',\r\n                    type: 'line',\r\n                    symbol: 'none',\r\n                    hoverAnimation: false,\r\n                    itemStyle: {\r\n                        color: 'rgb(255, 70, 131)'\r\n                    },\r\n\r\n                    data: data\r\n                }\r\n            ]\r\n        };\r\n\r\n        option && myChart.setOption(option)\r\n\r\n        inte = setInterval(() => {\r\n            var now = new Date(base += oneDay);\r\n            if(date.length>=20){\r\n                date.shift()\r\n            }\r\n            date.push([now.getHours(), now.getMinutes(), now.getSeconds()].join(':'));\r\n            axios.get(\"http://www.aifixerpic.icu/upload/getpointy\").then((res) => {\r\n                if(data.length>=20){\r\n                    data.shift()\r\n                }\r\n                data.push(res.data)\r\n                //console.log(res.data)\r\n            })\r\n\r\n            myChart.setOption(option);\r\n        }, 3000);\r\n        return () => {\r\n            console.log(\"linechart 页面销毁\")\r\n            clearInterval(inte)\r\n            myChart.dispose()\r\n        }\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"concern\" style={{ height: '250px', width: '100%' }}></div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default Concern;","D:\\Workspace\\demo01\\src\\pages\\component\\datasta\\muse\\index.jsx",[],"D:\\Workspace\\demo01\\src\\pages\\component\\datasta\\wifi\\index.jsx",[],{"ruleId":"162","severity":1,"message":"163","line":89,"column":41,"nodeType":"164","messageId":"165","endLine":89,"endColumn":42},{"ruleId":"166","severity":1,"message":"167","line":89,"column":43,"nodeType":"168","messageId":"169","endLine":89,"endColumn":74},{"ruleId":"162","severity":1,"message":"163","line":95,"column":39,"nodeType":"164","messageId":"165","endLine":95,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":106,"column":38,"nodeType":"164","messageId":"165","endLine":106,"endColumn":39},{"ruleId":"162","severity":1,"message":"163","line":112,"column":35,"nodeType":"164","messageId":"165","endLine":112,"endColumn":36},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":13},{"ruleId":"174","severity":1,"message":"178","line":5,"column":17,"nodeType":"176","messageId":"177","endLine":5,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":83,"column":41,"nodeType":"164","messageId":"165","endLine":83,"endColumn":42},{"ruleId":"174","severity":1,"message":"179","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"180","line":1,"column":38,"nodeType":"176","messageId":"177","endLine":1,"endColumn":44},{"ruleId":"174","severity":1,"message":"181","line":30,"column":17,"nodeType":"176","messageId":"177","endLine":30,"endColumn":30},{"ruleId":"174","severity":1,"message":"182","line":2,"column":78,"nodeType":"176","messageId":"177","endLine":2,"endColumn":88},{"ruleId":"174","severity":1,"message":"183","line":13,"column":8,"nodeType":"176","messageId":"177","endLine":13,"endColumn":10},{"ruleId":"184","severity":1,"message":"185","line":87,"column":17,"nodeType":"186","messageId":"187","endLine":87,"endColumn":84},{"ruleId":"188","severity":1,"message":"189","line":161,"column":37,"nodeType":"190","messageId":"191","endLine":161,"endColumn":84,"fix":"192"},{"ruleId":"193","severity":1,"message":"194","line":185,"column":37,"nodeType":"190","endLine":185,"endColumn":120},{"ruleId":"174","severity":1,"message":"195","line":4,"column":56,"nodeType":"176","messageId":"177","endLine":4,"endColumn":70},{"ruleId":"174","severity":1,"message":"196","line":24,"column":11,"nodeType":"176","messageId":"177","endLine":24,"endColumn":16},{"ruleId":"174","severity":1,"message":"197","line":27,"column":15,"nodeType":"176","messageId":"177","endLine":27,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":55,"column":37,"nodeType":"164","messageId":"165","endLine":55,"endColumn":38},{"ruleId":"198","severity":1,"message":"199","line":101,"column":28,"nodeType":"164","messageId":"200","endLine":101,"endColumn":30},{"ruleId":"198","severity":1,"message":"199","line":104,"column":28,"nodeType":"164","messageId":"200","endLine":104,"endColumn":30},{"ruleId":"198","severity":1,"message":"199","line":107,"column":28,"nodeType":"164","messageId":"200","endLine":107,"endColumn":30},{"ruleId":"198","severity":1,"message":"199","line":110,"column":28,"nodeType":"164","messageId":"200","endLine":110,"endColumn":30},{"ruleId":"174","severity":1,"message":"183","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":10},{"ruleId":"174","severity":1,"message":"201","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"202","line":2,"column":13,"nodeType":"176","messageId":"177","endLine":2,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":13},{"ruleId":"174","severity":1,"message":"203","line":4,"column":21,"nodeType":"176","messageId":"177","endLine":4,"endColumn":27},{"ruleId":"174","severity":1,"message":"175","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":13},{"ruleId":"174","severity":1,"message":"179","line":2,"column":15,"nodeType":"176","messageId":"177","endLine":2,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":38,"column":7,"nodeType":"206","endLine":38,"endColumn":9,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":51,"column":7,"nodeType":"206","endLine":51,"endColumn":9,"suggestions":"209"},{"ruleId":"198","severity":1,"message":"199","line":63,"column":26,"nodeType":"164","messageId":"200","endLine":63,"endColumn":28},{"ruleId":"204","severity":1,"message":"210","line":72,"column":7,"nodeType":"206","endLine":72,"endColumn":9,"suggestions":"211"},{"ruleId":"204","severity":1,"message":"210","line":84,"column":7,"nodeType":"206","endLine":84,"endColumn":20,"suggestions":"212"},{"ruleId":"174","severity":1,"message":"213","line":87,"column":11,"nodeType":"176","messageId":"177","endLine":87,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":94,"column":7,"nodeType":"206","endLine":94,"endColumn":9,"suggestions":"214"},{"ruleId":"174","severity":1,"message":"215","line":97,"column":11,"nodeType":"176","messageId":"177","endLine":97,"endColumn":23},{"ruleId":"204","severity":1,"message":"216","line":97,"column":24,"nodeType":"176","endLine":97,"endColumn":35},{"ruleId":"174","severity":1,"message":"217","line":138,"column":11,"nodeType":"176","messageId":"177","endLine":138,"endColumn":24},{"ruleId":"204","severity":1,"message":"218","line":170,"column":7,"nodeType":"206","endLine":170,"endColumn":21,"suggestions":"219"},{"ruleId":"204","severity":1,"message":"220","line":215,"column":37,"nodeType":"176","endLine":215,"endColumn":44},{"ruleId":"204","severity":1,"message":"221","line":228,"column":7,"nodeType":"206","endLine":228,"endColumn":9,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":232,"column":19,"nodeType":"225","messageId":"200","endLine":232,"endColumn":23},{"ruleId":"226","severity":1,"message":"227","line":74,"column":32,"nodeType":"176","messageId":"228","endLine":74,"endColumn":40},{"ruleId":"229","severity":1,"message":"230","line":51,"column":22,"nodeType":"176","messageId":"231","endLine":51,"endColumn":23},{"ruleId":"198","severity":1,"message":"199","line":35,"column":36,"nodeType":"164","messageId":"200","endLine":35,"endColumn":38},{"ruleId":"198","severity":1,"message":"199","line":38,"column":36,"nodeType":"164","messageId":"200","endLine":38,"endColumn":38},{"ruleId":"198","severity":1,"message":"199","line":41,"column":36,"nodeType":"164","messageId":"200","endLine":41,"endColumn":38},{"ruleId":"198","severity":1,"message":"199","line":44,"column":36,"nodeType":"164","messageId":"200","endLine":44,"endColumn":38},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'CompatibleURL' is assigned a value but never used.","'DatePicker' is defined but never used.","'Qs' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"234","text":"235"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'UploadOutlined' is defined but never used.","'props' is assigned a value but never used.","'setrole' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'useEffect' is defined but never used.","'echarts' is defined but never used.","'Result' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'Meshs' and 'Scene'. Either include them or remove the dependency array.","ArrayExpression",["236"],"React Hook useCallback has missing dependencies: 'Scene' and 'lights'. Either include them or remove the dependency array.",["237"],"React Hook useCallback has a missing dependency: 'Camera'. Either include it or remove the dependency array.",["238"],["239"],"'createRect' is assigned a value but never used.",["240"],"'create3dword' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'createLambert' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'Camera' and 'Scene'. Either include them or remove the dependency array.",["241"],"The ref value 'id.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'id.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'Meshs', 'Render', 'Scene', 'createlioght', 'init', 'lights', 'loadermodel', and 'setView'. Either include them or remove the dependency array.",["242"],"no-eval","eval can be harmful.","CallExpression","no-self-assign","'max2name' is assigned to itself.","selfAssignment","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation",[6042,6042]," rel=\"noreferrer\"",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"243","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [Meshs, Scene]",{"range":"256","text":"257"},"Update the dependencies array to be: [Scene, lights]",{"range":"258","text":"259"},"Update the dependencies array to be: [Camera]",{"range":"260","text":"261"},"Update the dependencies array to be: [Render, Camera]",{"range":"262","text":"263"},{"range":"264","text":"257"},"Update the dependencies array to be: [Render, Scene, Camera, Meshs]",{"range":"265","text":"266"},"Update the dependencies array to be: [Meshs, Render, Scene, createlioght, init, lights, loadermodel, setView]",{"range":"267","text":"268"},[1212,1214],"[Meshs, Scene]",[1596,1598],"[Scene, lights]",[2183,2185],"[Camera]",[2619,2632],"[Render, Camera]",[3111,3113],[5732,5746],"[Render, Scene, Camera, Meshs]",[7503,7505],"[Meshs, Render, Scene, createlioght, init, lights, loadermodel, setView]"]