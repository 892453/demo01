[{"D:\\Workspace\\demo01\\src\\pages\\component\\addCourse\\index.jsx":"1","D:\\Workspace\\demo01\\src\\pages\\login\\index.jsx":"2","D:\\Workspace\\demo01\\src\\pages\\component\\lineChart\\index.jsx":"3","D:\\Workspace\\demo01\\src\\pages\\test\\index.jsx":"4","D:\\Workspace\\demo01\\src\\pages\\component\\video\\index.jsx":"5","D:\\Workspace\\demo01\\src\\pages\\component\\infCourse\\index.jsx":"6","D:\\Workspace\\demo01\\src\\pages\\home\\index.js":"7","D:\\Workspace\\demo01\\src\\pages\\findpass\\index.js":"8","D:\\Workspace\\demo01\\src\\App.js":"9","D:\\Workspace\\demo01\\src\\index.js":"10","D:\\Workspace\\demo01\\src\\pages\\component\\coursedetail\\index.jsx":"11","D:\\Workspace\\demo01\\src\\pages\\test\\login\\index.jsx":"12","D:\\Workspace\\demo01\\src\\pages\\home\\component\\navigate\\index.jsx":"13","D:\\Workspace\\demo01\\src\\pages\\register\\index.jsx":"14","D:\\Workspace\\demo01\\src\\pages\\register\\component\\register\\index.jsx":"15","D:\\Workspace\\demo01\\src\\pages\\login\\component\\login\\index.jsx":"16","D:\\Workspace\\demo01\\src\\pages\\component\\coursedetail\\index0.jsx":"17","D:\\Workspace\\demo01\\src\\pages\\component\\device\\index.jsx":"18"},{"size":8384,"mtime":1617704434618,"results":"19","hashOfConfig":"20"},{"size":589,"mtime":1616894932252,"results":"21","hashOfConfig":"20"},{"size":5911,"mtime":1617107383700,"results":"22","hashOfConfig":"20"},{"size":744,"mtime":1616988247274,"results":"23","hashOfConfig":"20"},{"size":2784,"mtime":1617000472040,"results":"24","hashOfConfig":"20"},{"size":4528,"mtime":1617704413430,"results":"25","hashOfConfig":"20"},{"size":445,"mtime":1617704423720,"results":"26","hashOfConfig":"20"},{"size":3147,"mtime":1615107043828,"results":"27","hashOfConfig":"20"},{"size":887,"mtime":1617086846519,"results":"28","hashOfConfig":"20"},{"size":243,"mtime":1617093160949,"results":"29","hashOfConfig":"20"},{"size":484,"mtime":1616914026817,"results":"30","hashOfConfig":"20"},{"size":1568,"mtime":1616759262477,"results":"31","hashOfConfig":"20"},{"size":3714,"mtime":1617954877027,"results":"32","hashOfConfig":"20"},{"size":645,"mtime":1616897445079,"results":"33","hashOfConfig":"20"},{"size":4156,"mtime":1616898200524,"results":"34","hashOfConfig":"20"},{"size":3251,"mtime":1617704038594,"results":"35","hashOfConfig":"20"},{"size":1931,"mtime":1616913218491,"results":"36","hashOfConfig":"20"},{"size":3400,"mtime":1617868409424,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"ckhgcl",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Workspace\\demo01\\src\\pages\\component\\addCourse\\index.jsx",["85","86","87","88"],"import React  from 'react'\r\nimport { Breadcrumb, Form, Input, Button, Upload, message } from 'antd';\r\nimport {\r\n    HighlightOutlined,\r\n    InfoCircleOutlined,\r\n    UploadOutlined,\r\n    InboxOutlined,\r\n\r\n} from '@ant-design/icons';\r\nimport \"./addcourse.css\"\r\n\r\n\r\n\r\nexport default function AddCourse() {\r\n\r\n    var myDate = new Date();\r\n    var datetime = myDate.toLocaleDateString() + \" \" + myDate.getHours() + \":\" + myDate.getMinutes() + \":\" + myDate.getSeconds();\r\n    console.log(datetime)\r\n\r\n    const layout = {\r\n        labelCol: { span: 7 },      //整个添加框向右偏移的span\r\n        wrapperCol: { span: 10 },   //添加框所占的span\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 10, span: 2 },    //按钮向右偏移的span，所占的span\r\n    };\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        console.log(values[\"coursename\"], values[\"coursefile\"].file)\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    //上传课程视频文件用到的\r\n    const { Dragger } = Upload;\r\n    var coursefilelist = []\r\n    const props = {\r\n        name: 'file',\r\n        multiple: true,     //支持一次性上传多个文件\r\n        action: 'http://www.aifixerpic.icu/upload/upload_img',\r\n        onChange(info) {\r\n            const { status } = info.file;\r\n            // const {resp}=info.file.response\r\n\r\n            if (status !== 'uploading') {\r\n                console.log(\"uploading:\", info.file, info.fileList);\r\n            }\r\n            if (status === 'done') {\r\n                message.success(\"done:\" + `${info.file.name} 课程文件上传成功...`);\r\n                console.log(\"课程文件返回结果：\" + info.file.response);\r\n                coursefilelist.push(info.file.response)\r\n                console.log(\"courselist::\", coursefilelist)\r\n                console.log(typeof (coursefilelist))\r\n            } else if (status === 'error') {\r\n                message.error(\"error\" + `${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    };\r\n\r\n    //上传封面图片\r\n    var fengmianimg=[];\r\n    function uploadfengmian(info) {\r\n        const { status } = info.file;\r\n        fengmianimg.splice(0,fengmianimg.length)    //清空数组元素,使用 fengmianimg=[] 清空数组时不行\r\n        if (status === 'done') {\r\n            message.success(\"done:\" + `${info.file.name} 封面文件上传成功...`);\r\n            console.log(\"封面文件返回结果：\" + info.file.response);\r\n            \r\n            fengmianimg.push(info.file.response)\r\n            console.log(\"fengmianimg::\", fengmianimg)\r\n        } else if (status === 'error') {\r\n            message.error(\"error\" + `${info.file.name} file upload failed.`);\r\n        }\r\n    }\r\n\r\n    //验证头像文件大小（<2MB）和格式(jpg,png)\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n        return isJpgOrPng && isLt2M;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* 头部面包屑 */}\r\n            <Breadcrumb style={{ margin: '16px 0', fontSize: \"20px\" }}>\r\n                <Breadcrumb.Item>\r\n                    <HighlightOutlined />\r\n                    <span>\r\n                        课程管理\r\n                            </span>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <InfoCircleOutlined />\r\n                    <span>添加课程</span>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            \r\n                    <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        // initialValues={\r\n                        //                {\"coursefile\":{coursefilelist}},\r\n                        //                {\"fengmian\":{fengmianimg}}\r\n                                      \r\n                        //                 }\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"课程名称\"\r\n                            name=\"coursename\"\r\n                            rules={[{ required: true, message: '课程名称为不能为空' }]}\r\n                        //initialValue=\"kechengming\"\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"发布人\"\r\n                            name=\"uploadname\"\r\n                            rules={[{ required: true, message: '发布人不能为空' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"发布时间\"\r\n                            name=\"uploadtime\"\r\n                            initialValue={datetime}\r\n                        >\r\n                            {/* <DatePicker showTime onChange={onChange} onOk={onOk} /> */}\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"课程描述\"\r\n                            name=\"describle\"\r\n                            rules={[{ required: true, message: '课程描述不能为空' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        {/* 上传课程封面 */}\r\n                        <Form.Item\r\n                            label=\"上传课程封面\"\r\n                        // name=\"fengmian\"\r\n                        // initialValue={fengmianimg}\r\n                        >\r\n                            <Upload\r\n                                action=\"http://www.aifixerpic.icu/upload/upload_img\"\r\n                                name=\"file\"\r\n                                listType=\"picture\"\r\n                                maxCount={1}\r\n                                beforeUpload={beforeUpload}\r\n                                onChange={uploadfengmian}\r\n                            >\r\n                                {/* <Upload\r\n                        {...propsfengmian}\r\n                    > */}\r\n                                <Button icon={<UploadOutlined />}>上传 (最多1张)</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        {/* 上传课程视频文件 */}\r\n                        <Form.Item\r\n                            label=\"上传课程资料\"\r\n                        >\r\n                            <Dragger {...props}>\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p className=\"ant-upload-text\">点击或拖动文件到此区域上传文件</p>\r\n                                <p className=\"ant-upload-hint\">\r\n                                    支持单次或批量上传\r\n                        </p>\r\n                            </Dragger>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                发布课程\r\n                        </Button>\r\n                        </Form.Item>\r\n\r\n\r\n                        {/* 上传课程封面和课程文件的value值，只能这样写了0.0 */}\r\n                        <Form.Item\r\n                            name=\"fengmian\"\r\n                            initialValue={{fengmianimg}}\r\n                        ></Form.Item>\r\n                        <Form.Item\r\n                            name=\"coursefile\"\r\n                            initialValue={coursefilelist}\r\n                        ></Form.Item>\r\n                        {/* ************************************ */}\r\n                    </Form>\r\n\r\n               \r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}","D:\\Workspace\\demo01\\src\\pages\\login\\index.jsx",[],["89","90"],"D:\\Workspace\\demo01\\src\\pages\\component\\lineChart\\index.jsx",["91","92","93","94","95","96","97"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { Breadcrumb, Button, Row,Col} from 'antd';\r\nimport {\r\n    HighlightOutlined,\r\n    InfoCircleOutlined\r\n\r\n} from '@ant-design/icons';\r\nimport axios from \"axios\"\r\nimport * as echarts from 'echarts';\r\nimport Draggable from 'react-draggable';\r\nimport \"./linechart.css\"\r\nimport Video from \"../video\"\r\n\r\nfunction Linechart() {\r\n\r\n    console.log(\"init\")\r\n    let buttonstatus=1      //按钮状态\r\n    var datay=[];\r\n\r\n    var date=new Date();// 获取系统当前时间\r\n    var yyyy=date.getFullYear();\r\n    var mth=date.getMonth();\r\n    var dd=date.getDate();\r\n    var hh=date.getHours();\r\n    var mm=date.getMinutes();\r\n    var ss=date.getSeconds(); \r\n    console.log(yyyy,mth,dd,hh,mm,ss)\r\n\r\n    var inte;\r\n    var myChart;\r\n\r\n  \r\n\r\n    \r\n\r\n\r\n    function clickpause(){\r\n        console.log(\"click 暂停\")\r\n        console.log(\"datay:\",datay)\r\n        clearInterval(inte)\r\n      \r\n    }\r\n\r\n    function clickbegin() {\r\n        console.log(\"click 开始\")\r\n        buttonstatus=1\r\n        var chartDom = document.getElementById('main');\r\n        if(myChart!=undefined){\r\n            //myChart.clear()\r\n            var date = [];\r\n            data=datay\r\n        }else{\r\n            myChart = echarts.init(chartDom);\r\n            var date = [];\r\n            var data = [0];\r\n            console.log(\"init data:\",data)\r\n        }\r\n        \r\n        \r\n        \r\n       \r\n        \r\n        var option;\r\n        \r\n        var base = +new Date(new Date().getFullYear(), new Date().getMonth() + 1, new Date().getDate(),new Date().getHours(), new Date().getMinutes(), new Date().getSeconds());\r\n        var oneDay = 1 * 1000;\r\n       \r\n        \r\n       \r\n        \r\n        option = {\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                position: function (pt) {\r\n                    return [pt[0], '10%'];\r\n                }\r\n            },\r\n\r\n            visualMap: [{\r\n                show: false,\r\n                type: 'continuous',\r\n                seriesIndex: 0,\r\n                min: -20,\r\n                max: 30\r\n            }],   //沿y轴的渐变\r\n\r\n            title: {\r\n                left: 'center',\r\n                text: '专注度-时间曲线',\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    dataZoom: {\r\n                        yAxisIndex: 'none'\r\n                    },\r\n                    restore: {},\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            grid:{\r\n                right: '20%'\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: date\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                boundaryGap: [0, '100%']\r\n            },\r\n            dataZoom: [{\r\n                type: 'inside',\r\n                start: 0,\r\n                end: 100\r\n            }, {\r\n                start: 0,\r\n                end: 10\r\n            }],\r\n            series: [\r\n                {\r\n                    name: '专注度评分',\r\n                    type: 'line',\r\n                    symbol: 'none',\r\n                    sampling: 'lttb',\r\n                    itemStyle: {\r\n                        color: 'rgb(255, 70, 131)'\r\n                    },\r\n                    //此处为数据面积图的颜色配置\r\n                    // areaStyle: {\r\n                    //     color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    //         offset: 0,\r\n                    //         color: 'rgb(255, 158, 68)'\r\n                    //     }, {\r\n                    //         offset: 1,\r\n                    //         color: 'rgb(255, 70, 131)'\r\n                    //     }])\r\n                    // },\r\n                    data: data\r\n                }\r\n            ]\r\n        };\r\n            \r\n            option && myChart.setOption(option)\r\n\r\n            inte = setInterval(() => {\r\n            var now = new Date(base += oneDay);\r\n            date.push([now.getHours(), now.getMinutes(), now.getSeconds()].join(':'));\r\n            axios.get(\"http://www.aifixerpic.icu/upload/getpointy\").then((res)=>{\r\n                data.push(res.data)\r\n                datay.push(res.data)\r\n            })\r\n           // console.log(\"画图的data\",data)\r\n            myChart.setOption(option);\r\n        }, 1000);\r\n        \r\n       \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* 头部面包屑 */}\r\n            <Breadcrumb style={{ margin: '16px 0', fontSize: \"20px\" }}>\r\n                <Breadcrumb.Item>\r\n                    <HighlightOutlined />\r\n                    <span>\r\n                        数据分析\r\n                            </span>\r\n                </Breadcrumb.Item>\r\n\r\n                <Breadcrumb.Item>\r\n                    <InfoCircleOutlined />\r\n                    <span>专注度检测</span>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            {/* 专注度信息 */}\r\n            <div id=\"main\" style={{ height: \"400px\" }} />\r\n\r\n                \r\n                    <Row> \r\n                        <Col span={3}>\r\n                            <Button type=\"primary\" size=\"large\" style={{ padding: \"1px 15px\", margin: \"10px\"}} onClick={clickbegin}>开始</Button>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <Button type=\"primary\" size=\"large\" style={{ padding: \"1px 15px\", margin: \"10px\"}} onClick={clickpause}>暂停</Button>\r\n                        </Col>\r\n\r\n                        <Col span={8}> \r\n                            <Draggable><Video /></Draggable>\r\n                        </Col>\r\n                       \r\n                    </Row>\r\n                \r\n\r\n                    \r\n                    \r\n\r\n            </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Linechart","D:\\Workspace\\demo01\\src\\pages\\test\\index.jsx",["98"],"D:\\Workspace\\demo01\\src\\pages\\component\\video\\index.jsx",["99","100","101"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport Draggable from 'react-draggable';\r\n\r\nexport default function Video() {\r\n\r\n    useEffect(() => {\r\n        //访问用户媒体设备的兼容方法\r\n        function getUserMedia(constraints, success, error) {\r\n            if (navigator.mediaDevices.getUserMedia) {\r\n                //最新的标准API\r\n                navigator.mediaDevices.getUserMedia(constraints).then(success).catch(error);\r\n            } else if (navigator.webkitGetUserMedia) {\r\n                //webkit核心浏览器\r\n                navigator.webkitGetUserMedia(constraints, success, error)\r\n            } else if (navigator.mozGetUserMedia) {\r\n                //firfox浏览器\r\n                navigator.mozGetUserMedia(constraints, success, error);\r\n            } else if (navigator.getUserMedia) {\r\n                //旧版API\r\n                navigator.getUserMedia(constraints, success, error);\r\n            }\r\n        }\r\n\r\n        let video = document.getElementById('video');\r\n        // let canvas = document.getElementById('canvas');\r\n        // let context = canvas.getContext('2d');\r\n\r\n        function success(stream) {\r\n            //兼容webkit核心浏览器\r\n            let CompatibleURL = window.URL || window.webkitURL;\r\n            //将视频流设置为video元素的源\r\n            console.log(stream);\r\n\r\n            //video.src = CompatibleURL.createObjectURL(stream);\r\n            video.srcObject = stream;\r\n            video.play();\r\n        }\r\n\r\n        function error(error) {\r\n            console.log(`访问用户媒体设备失败${error.name}, ${error.message}`);\r\n        }\r\n\r\n        if (navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia) {\r\n            //调用用户媒体设备, 访问摄像头\r\n            getUserMedia({ video: { width: 480, height: 320 } }, success, error);\r\n        } else {\r\n            alert('不支持访问用户媒体');\r\n        }\r\n\r\n        //拍照按钮部分\r\n        // document.getElementById('capture').addEventListener('click', function () {\r\n        //     context.drawImage(video, 0, 0, 480, 320);\r\n        // })\r\n    })\r\n\r\n    return (\r\n        <div>\r\n        <Draggable> \r\n        <div>\r\n            {/* video标签里的【control参数】可以设置暂停按钮 <video id=\"video\" width=\"480\" height=\"320\" controls>  */}\r\n           \r\n            <video id=\"video\" width=\"100%\" height=\"150px\" >  \r\n            </video>\r\n            {/* <div>\r\n                <button id=\"capture\">拍照</button>\r\n            </div>*/}\r\n        </div>\r\n\r\n        </Draggable>\r\n        {/* <canvas id=\"canvas\" width=\"480\" height=\"320\" style={{background:\"red\"}}></canvas>  */}\r\n        </div>\r\n    )\r\n}","D:\\Workspace\\demo01\\src\\pages\\component\\infCourse\\index.jsx",["102"],"import React, { useEffect, useState } from 'react'\r\nimport { Breadcrumb, Popover ,Row,Col } from 'antd';\r\nimport {\r\n    HighlightOutlined,\r\n    InfoCircleOutlined,\r\n    CloseSquareOutlined\r\n\r\n} from '@ant-design/icons';\r\nimport \"./infCourse.css\"\r\nimport Axios from 'axios';\r\n//import CourseDetail from　\"../coursedetail\" \r\n\r\n/*\r\n用于展示课程管理的【课程信息】界面\r\n*/\r\n\r\nfunction Courseinf() {\r\n\r\n    const [coursedata, setcoursedata] = useState([])   //这里的【】改bug用了5个小时***\r\n    //使用useEfefect请求数据\r\n    useEffect(() => {\r\n        Axios.get(\"http://www.aifixerpic.icu/music/name\")\r\n            .then((res) => {\r\n                let course = res.data.data\r\n                console.log(\"返回的courese:\", course)\r\n                setcoursedata(course)\r\n            })\r\n\r\n    }, []);   //第二参数[]内是要监听的参数，没有要监听的参数时，setcoursedata()函数执行时不会触发useEffect()函数\r\n\r\n    function clickimg() {\r\n        console.log(\"查看课程详细信息\")\r\n        document.getElementById(\"courseinfodetail\").style.display = 'block';\r\n        document.getElementsByClassName(\"courseinfo\")[0].style.display=\"none\";\r\n        \r\n    }\r\n    function closeinfodetail(){\r\n        console.log(\"关闭查看课程详细信息\")\r\n        document.getElementById(\"courseinfodetail\").style.display = 'none';\r\n        document.getElementsByClassName(\"courseinfo\")[0].style.display=\"block\";\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"allcourseinfo\">\r\n            {/* 头部面包屑 */}\r\n            <Breadcrumb style={{ margin: '16px 0', fontSize: \"20px\" }}>\r\n                <Breadcrumb.Item>\r\n                    <HighlightOutlined />\r\n                    <span>\r\n                        课程管理\r\n                            </span>\r\n                </Breadcrumb.Item>\r\n\r\n                <Breadcrumb.Item>\r\n                    <InfoCircleOutlined />\r\n                    <span>课程信息</span>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            {/* 课程详细信息 */}\r\n            <div id=\"courseinfodetail\">\r\n\r\n                {/* 关闭查看【课程详情】按钮 */}\r\n                <Row justify=\"end\">\r\n                    <Col span={1}>\r\n                        <CloseSquareOutlined onClick={closeinfodetail} style={{fontSize:\"30px\"}} />\r\n                    </Col>\r\n                </Row>\r\n                \r\n                {/* 课程详情界面 */}\r\n                <Row>\r\n                    <Col md={24} lg={24} xl={18}>\r\n                        <video style={{width:\"100%\"}} src=\"http://www.aifixerpic.icu/music/download_mp3?filename=比赛回顾.mp4\" controls></video>\r\n                    </Col>\r\n                </Row>\r\n                    \r\n               \r\n              \r\n            </div>\r\n\r\n            {/* 课程主体信息 */}\r\n            <div className=\"courseinfo\">\r\n                {/* 【水平间隔，垂直间隔】 */}\r\n                <Row  gutter={[24, 32]}>    \r\n                    {\r\n                        coursedata.map((cour) => {\r\n                            return (\r\n                                \r\n                                <Col md={12} lg={8} xl={6}  key={cour.courseid}>\r\n                                    <a className=\"aaa\" onClick={clickimg}>\r\n                                        <img\r\n                                            className=\"imgstyle\"\r\n                                            src={cour.courseurl}\r\n                                            alt=\"Tup2\"\r\n                                        />\r\n                                    </a>\r\n                                    <dl className=\"dlstyle\">\r\n                                        <Popover content={cour.describle} title=\"【课程简介】\" trigger=\"hover\">\r\n                                            <dt>{cour.coursename}</dt>\r\n                                            <dt>发布人：{cour.uploadname}</dt>\r\n                                            <dt>发布时间：{cour.uploadtime}</dt>\r\n                                        </Popover>\r\n                                    </dl>\r\n\r\n                                </Col>\r\n                               \r\n\r\n                            \r\n\r\n                                \r\n                                \r\n                            )\r\n\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Courseinf","D:\\Workspace\\demo01\\src\\pages\\home\\index.js",["103","104","105"],"import React, { useEffect, useState } from 'react';\nimport { Row, Col,Menu } from \"antd\"\nimport Navigate from \"./component/navigate\"\nfunction Home() {\n\n  \n\n  return (\n    <div>\n      <Row className=\"daohang\" justify=\"center\">\n        <Col sm={24} md={22} lg={20} xl={14}>\n            <Navigate />\n          \n        </Col>\n      </Row>\n      <Row justify=\"center\" className=\"zhuye\">\n        \n      </Row>\n    </div>\n  );\n}\n\nexport default Home;\n",["106","107"],"D:\\Workspace\\demo01\\src\\pages\\findpass\\index.js",["108","109"],"import React, { useState } from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport { Card, Input,Upload, Button, message } from 'antd';\r\nimport { PhoneOutlined, VerifiedOutlined, KeyOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport './findpass.css';\r\n\r\nfunction FindPass() {\r\n\r\n    const [userPhone, setuserPhone] = useState(\"\")\r\n    const [VerCode, setVerCode] = useState(\"\")\r\n    const [PassWord, setPassWord] = useState(\"\")\r\n    const [ConfirmPass, setConfirmPass] = useState(\"\")\r\n    //const [isLoading,setIsLoading] = useState(false)\r\n\r\n    const checkRegister = () => {\r\n        //test\r\n        console.log(\"手机号：\", userPhone)\r\n        console.log(\"验证码：\", VerCode)\r\n        console.log(\"密码：\", PassWord)\r\n        console.log(\"确认密码：\", ConfirmPass)\r\n\r\n    };\r\n\r\n    const props = {\r\n        beforeUpload: file => {\r\n            if (file.type !== 'image/png') {\r\n                message.error(`${file.name} is not a png file`);\r\n            }\r\n            return file.type === 'image/png' ? true : Upload.LIST_IGNORE;\r\n        },\r\n        onChange: info => {\r\n            console.log(info.fileList);\r\n        },\r\n    };\r\n    const clickvercode=()=>{\r\n            console.log(\"获取验证码的手机号：\",userPhone)\r\n    }\r\n\r\n    return (\r\n        <div className=\"findpass-div\">\r\n\r\n            <Card title=\"找回密码\" bordered={true} style={{ width: 400,textAlign:\"center\"}}>\r\n                <Input\r\n                    id=\"userphone\"\r\n                    size=\"large\"\r\n                    placeholder=\"输入注册手机号\"\r\n                    prefix={<PhoneOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setuserPhone(e.target.value) }}\r\n                />\r\n                <Button type=\"link\" style={{ margin: \"10px 0px\" }} onClick={clickvercode}>点击获取验证码</Button>\r\n                <Input\r\n                    id=\"vercode\"\r\n                    size=\"large\"\r\n                    placeholder=\"输入验证码\"\r\n                    prefix={<VerifiedOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setVerCode(e.target.value) }}\r\n                />\r\n                <br /><br />\r\n                <Input.Password\r\n                    id=\"password\"\r\n                    size=\"large\"\r\n                    placeholder=\"输入修改密码\"\r\n                    prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setPassWord(e.target.value) }}\r\n                />\r\n                <br /><br />\r\n                <Input.Password\r\n                    id=\"confirmpass\"\r\n                    size=\"large\"\r\n                    placeholder=\"再次输入密码\"\r\n                    prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setConfirmPass(e.target.value) }}\r\n                />\r\n                <br /> <br />\r\n                \r\n                <Button type=\"primary\" size=\"large\" block onClick={checkRegister}>修改密码</Button>\r\n\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default FindPass",["110","111"],"D:\\Workspace\\demo01\\src\\App.js",[],"D:\\Workspace\\demo01\\src\\index.js",[],"D:\\Workspace\\demo01\\src\\pages\\component\\coursedetail\\index.jsx",["112","113"],"D:\\Workspace\\demo01\\src\\pages\\test\\login\\index.jsx",["114","115","116"],"import React, { useState } from 'react'\nimport { Form, Input, Button } from 'antd';\nimport {  UserOutlined, LockOutlined } from '@ant-design/icons';\n\nfunction Login() {\n\n  \n    const onFinish = (values) => {\n      console.log('Received values of form: ', values);\n    }\n  \n  return (\n\n    <Form\n      name=\"normal_login\"\n      className=\"login-form\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      style={{padding:\"20px\" , background:\"rgba(153, 153, 161, 0.133)\" }}\n     \n    >\n      <Form.Item style={{fontSize:\"20px\",textAlign:\"center\"}}>\n        系统登录\n      </Form.Item>\n      <Form.Item\n        name=\"username\"\n        rules={[{ required: true, message: '用户名不能为空!' }]}\n      >\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: '密码不能为空!' }]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"密码\"\n        />\n      </Form.Item>\n      <Form.Item>\n        <a className=\"login-form-forgot\" href=\"\" style={{ marginLeft: \"30px\", float: \"left\" }}> 忘记密码</a>\n        <a href=\"\" style={{ marginRight: \"30px\", float: \"right\" }}>立即注册</a>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\n          登录\n      </Button>\n      </Form.Item>\n    </Form>\n\n  );\n}\n\nexport default Login;\n","D:\\Workspace\\demo01\\src\\pages\\home\\component\\navigate\\index.jsx",[],"D:\\Workspace\\demo01\\src\\pages\\register\\index.jsx",[],"D:\\Workspace\\demo01\\src\\pages\\register\\component\\register\\index.jsx",["117"],"import React, { useState } from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport { Card, Input,Upload, Button, message,Form,Select } from 'antd';\r\n\r\nimport { PhoneOutlined, VerifiedOutlined, KeyOutlined, UploadOutlined ,CaretLeftFilled} from '@ant-design/icons';\r\n\r\nfunction Register() {\r\n\r\n    const { Option } = Select;\r\n\r\n    const [userPhone, setuserPhone] = useState(\"\")\r\n    const [VerCode, setVerCode] = useState(\"\")\r\n    const [PassWord, setPassWord] = useState(\"\")\r\n    const [ConfirmPass, setConfirmPass] = useState(\"\")\r\n    //const [isLoading,setIsLoading] = useState(false)\r\n\r\n    const checkRegister = () => {\r\n\r\n        console.log(\"手机号：\", userPhone)\r\n        console.log(\"验证码：\", VerCode)\r\n        console.log(\"密码：\", PassWord)\r\n        console.log(\"确认密码：\", ConfirmPass)\r\n\r\n    };\r\n\r\n    const props = {\r\n        beforeUpload: file => {\r\n            if (file.type !== 'image/png') {\r\n                message.error(`${file.name} is not a png file`);\r\n            }\r\n            return file.type === 'image/png' ? true : Upload.LIST_IGNORE;\r\n        },\r\n        onChange: info => {\r\n            console.log(info.fileList);\r\n        },\r\n    };\r\n    const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n          <Select style={{ width: 70 }}>\r\n            <Option value=\"86\">+86</Option>\r\n            {/* <Option value=\"87\">+87</Option> */}\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n    const clickvercode=()=>{\r\n            console.log(\"获取验证码的手机号：\",userPhone)\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-div\">\r\n            \r\n\r\n            {/* 注册部分 */}\r\n            <div className=\"main\">\r\n                <div className=\"return\">\r\n                    <CaretLeftFilled />\r\n                    <a href=\"login\">返回登陆</a>\r\n                </div>\r\n                \r\n            <Form  \r\n                style={{textAlign:\"center\", background:\"rgba(153, 153, 161, 0.133)\",padding:\"20px\" }}\r\n            >\r\n\r\n                <Form.Item style={{fontSize:\"20px\",textAlign:\"center\"}}>\r\n                    系统注册\r\n                </Form.Item>\r\n                <Input\r\n                    id=\"userphone\"\r\n                    size=\"large\"\r\n                    placeholder=\"输入注册手机号\"\r\n                    addonBefore={prefixSelector} style={{ width: '100%' }}     //addonBefor设置标签\r\n                    prefix={<PhoneOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setuserPhone(e.target.value) }}\r\n                />\r\n                <Button type=\"link\" style={{ margin: \"10px 0px\" }} onClick={clickvercode}>点击获取验证码</Button>\r\n                <Input\r\n                    id=\"vercode\"\r\n                    size=\"large\"\r\n                    placeholder=\"输入验证码\"\r\n                    prefix={<VerifiedOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setVerCode(e.target.value) }}\r\n                />\r\n                <br /><br />\r\n                <Input.Password\r\n                    id=\"password\"\r\n                    size=\"large\"\r\n                    placeholder=\"输入密码\"\r\n                    prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setPassWord(e.target.value) }}\r\n                />\r\n                <br /><br />\r\n                <Input.Password\r\n                    id=\"confirmpass\"\r\n                    size=\"large\"\r\n                    placeholder=\"再次输入密码\"\r\n                    prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    onChange={(e) => { setConfirmPass(e.target.value) }}\r\n                />\r\n                <br /> <br />\r\n                <Upload {...props}>\r\n                    <Button icon={<UploadOutlined />}>上传头像</Button>\r\n                </Upload>\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" block onClick={checkRegister}>注册</Button>\r\n\r\n            </Form>\r\n            </div>\r\n\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Register","D:\\Workspace\\demo01\\src\\pages\\login\\component\\login\\index.jsx",["118"],"D:\\Workspace\\demo01\\src\\pages\\component\\coursedetail\\index0.jsx",["119","120"],"D:\\Workspace\\demo01\\src\\pages\\component\\device\\index.jsx",[],{"ruleId":"121","severity":1,"message":"122","line":51,"column":41,"nodeType":"123","messageId":"124","endLine":51,"endColumn":42},{"ruleId":"121","severity":1,"message":"122","line":57,"column":39,"nodeType":"123","messageId":"124","endLine":57,"endColumn":40},{"ruleId":"121","severity":1,"message":"122","line":68,"column":37,"nodeType":"123","messageId":"124","endLine":68,"endColumn":38},{"ruleId":"121","severity":1,"message":"122","line":74,"column":35,"nodeType":"123","messageId":"124","endLine":74,"endColumn":36},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"133","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"134","line":1,"column":38,"nodeType":"131","messageId":"132","endLine":1,"endColumn":44},{"ruleId":"129","severity":1,"message":"135","line":46,"column":9,"nodeType":"131","messageId":"132","endLine":46,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":48,"column":19,"nodeType":"123","messageId":"138","endLine":48,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":51,"column":13,"nodeType":"131","messageId":"141","endLine":51,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":54,"column":17,"nodeType":"131","messageId":"144","endLine":54,"endColumn":21},{"ruleId":"129","severity":1,"message":"133","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"133","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"134","line":1,"column":38,"nodeType":"131","messageId":"132","endLine":1,"endColumn":44},{"ruleId":"129","severity":1,"message":"145","line":30,"column":17,"nodeType":"131","messageId":"132","endLine":30,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":92,"column":37,"nodeType":"148","endLine":92,"endColumn":75},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"133","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"149","line":2,"column":19,"nodeType":"131","messageId":"132","endLine":2,"endColumn":23},{"ruleId":"125","replacedBy":"150"},{"ruleId":"127","replacedBy":"151"},{"ruleId":"129","severity":1,"message":"152","line":4,"column":56,"nodeType":"131","messageId":"132","endLine":4,"endColumn":70},{"ruleId":"129","severity":1,"message":"153","line":24,"column":11,"nodeType":"131","messageId":"132","endLine":24,"endColumn":16},{"ruleId":"125","replacedBy":"154"},{"ruleId":"127","replacedBy":"155"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"133","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"133","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"156","line":42,"column":9,"nodeType":"148","endLine":42,"endColumn":96},{"ruleId":"146","severity":1,"message":"156","line":43,"column":9,"nodeType":"148","endLine":43,"endColumn":68},{"ruleId":"129","severity":1,"message":"157","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"133","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"133","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'buttonstatus' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","no-use-before-define","'data' was used before it was defined.","usedBeforeDefined","no-redeclare","'date' is already defined.","redeclared","'CompatibleURL' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Menu' is defined but never used.",["158"],["159"],"'UploadOutlined' is defined but never used.","'props' is assigned a value but never used.",["158"],["159"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]